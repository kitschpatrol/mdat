// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`cli help cst to object > should parse and transform "mdat --help" to a valid object 1`] = `
{
  "arguments": [
    "<files..>",
    "[options]",
  ],
  "commandName": "mdat",
  "commands": [
    {
      "aliases": undefined,
      "arguments": [
        "[command]",
        "[options]",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Note: \`expand\` is the default and only command at the moment.",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "<files..>",
        "[options]",
      ],
      "choices": undefined,
      "commandName": "expand",
      "default": true,
      "defaultValue": undefined,
      "description": "description goes here",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
  ],
  "description": "description goes here",
  "options": [
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Configuration is loaded if found from the usual places, or defaults are used.",
      "description": "Path(s) to files containing mdat configs.",
      "flags": [
        "--config",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-r",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Path(s) to files containing mdat comment expansion rules.",
      "flags": [
        "--rules",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as input file.",
      "description": "Output file directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-n",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same name as input file. Overwrites the input file.",
      "description": "Output file name.",
      "flags": [
        "--name",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.",
      "flags": [
        "--print",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.",
      "flags": [
        "--prefix",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-m",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.",
      "flags": [
        "--meta",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-c",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.",
      "flags": [
        "--check",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": [
    {
      "aliases": undefined,
      "arguments": [
        "files",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Markdown file(s) with \`mdat\` placeholder comments to expand.",
      "flags": undefined,
      "required": undefined,
      "type": "string",
    },
  ],
  "subcommandName": undefined,
}
`;

exports[`cli help cst to object > should parse and transform "mdat expand --help" to a valid object 1`] = `
{
  "arguments": [
    "<files..>",
    "[options]",
  ],
  "commandName": "mdat",
  "commands": undefined,
  "description": "description goes here",
  "options": [
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Configuration is loaded if found from the usual places, or defaults are used.",
      "description": "Path(s) to files containing mdat configs.",
      "flags": [
        "--config",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-r",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Path(s) to files containing mdat comment expansion rules.",
      "flags": [
        "--rules",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as input file.",
      "description": "Output file directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-n",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same name as input file. Overwrites the input file.",
      "description": "Output file name.",
      "flags": [
        "--name",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.",
      "flags": [
        "--print",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.",
      "flags": [
        "--prefix",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-m",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.",
      "flags": [
        "--meta",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-c",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.",
      "flags": [
        "--check",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": [
    {
      "aliases": undefined,
      "arguments": [
        "files",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Markdown file(s) with \`mdat\` placeholder comments to expand.",
      "flags": undefined,
      "required": true,
      "type": "string",
    },
  ],
  "subcommandName": "expand",
}
`;

exports[`cli help cst to object > should parse and transform "mdat readme --help" to a valid object 1`] = `
{
  "arguments": [
    "[command]",
    "[options]",
  ],
  "commandName": "mdat",
  "commands": [
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "readme expand",
      "default": true,
      "defaultValue": undefined,
      "description": "Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "readme check",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Validate \`mdat\` placeholder comments in your readme.md.",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "readme clean",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Collapse \`mdat\` placeholder comments in your readme.md.",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "readme init",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
      "flags": undefined,
      "parentCommandName": "mdat",
      "required": undefined,
      "type": undefined,
    },
  ],
  "description": "Work with \`mdat\` comments in your readme.md.",
  "options": [
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Configuration is loaded if found from the usual places, or defaults are used.",
      "description": "Path(s) to files containing mdat configs.",
      "flags": [
        "--config",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-r",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Path(s) to files containing \`mdat\` comment expansion rules.",
      "flags": [
        "--rules",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as input file.",
      "description": "Output file directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-n",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same name as input file. Overwrites the input file.",
      "description": "Output file name.",
      "flags": [
        "--name",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "The closest readme.md file is used by default.",
      "description": "Path to the readme.md file to expand.",
      "flags": [
        "--readme",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "The closest package.json file is used by default.",
      "description": "Path to the package.json file to use to populate the readme.",
      "flags": [
        "--package",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "./assets",
      "description": "Path to find and save readme-related assets.",
      "flags": [
        "--assets",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety.",
      "flags": [
        "--prefix",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-m",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.",
      "flags": [
        "--meta",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.",
      "flags": [
        "--print",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": undefined,
  "subcommandName": "readme",
}
`;

exports[`cli help cst to object > should parse and transform "mdat readme init --help" to a valid object 1`] = `
{
  "arguments": [
    "[options]",
  ],
  "commandName": "mdat readme",
  "commands": undefined,
  "description": "Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
  "options": [
    {
      "aliases": [
        "-i",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "true",
      "description": "Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt.",
      "flags": [
        "--interactive",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "\`false\`, if an existing readme is found, don't touch it.",
      "description": "Replace an existing readme file if one is found.",
      "flags": [
        "--overwrite",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as input file.",
      "description": "Output file directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-e",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "true",
      "description": "Automatically run \`mdat readme\` immediately after creating the readme template.",
      "flags": [
        "--expand",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-t",
      ],
      "arguments": undefined,
      "choices": [
        ""Mdat Readme"",
        ""Standard Readme Basic"",
        ""Standard Readme Full"",
      ],
      "commandName": undefined,
      "default": undefined,
      "defaultValue": ""Mdat Readme"",
      "description": "Specify a template to use for the new readme.",
      "flags": [
        "--template",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-c",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "true",
      "description": "Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical.",
      "flags": [
        "--compound",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": undefined,
  "subcommandName": "init",
}
`;

exports[`cli help cst to object > should parse and transform "mdat-readme --help" to a valid object 1`] = `
{
  "arguments": [
    "[options]",
  ],
  "commandName": "mdat-readme",
  "commands": [
    {
      "aliases": undefined,
      "arguments": [
        "[command]",
        "[options]",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Expand mdat comment placeholders in your readme with a collection of helpful built-in expansion rules.",
      "flags": undefined,
      "parentCommandName": "mdat-readme",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "expand",
      "default": true,
      "defaultValue": undefined,
      "description": "Expand description goes here.",
      "flags": undefined,
      "parentCommandName": "mdat-readme",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[options]",
      ],
      "choices": undefined,
      "commandName": "init",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Interactively Create a new readme.md file with sensible \`mdat\` comment placeholders.",
      "flags": undefined,
      "parentCommandName": "mdat-readme",
      "required": undefined,
      "type": undefined,
    },
  ],
  "description": "Expand description goes here.",
  "options": [
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "The closest readme file is used by default.",
      "description": "Path to the readme file to expand.",
      "flags": [
        "--readme-file",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "The closest package.json file is used by default.",
      "description": "Path to the package.json file to use to populate the readme.",
      "flags": [
        "--package-file",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Configuration is loaded if found from the usual places, or defaults are used.",
      "description": "Path(s) to files containing mdat configs.",
      "flags": [
        "--config",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-r",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Path(s) to files containing additional mdat comment expansion rules.",
      "flags": [
        "--rules",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as your readme file. Writes rule expansions directly to your readme file.",
      "description": "Output file directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-n",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "Same directory as input file. Writes directly to your readme file.",
      "description": "Output file name.",
      "flags": [
        "--name",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.",
      "flags": [
        "--print",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.",
      "flags": [
        "--prefix",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-m",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "true",
      "description": "Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.",
      "flags": [
        "--meta",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-c",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Check your readme for rule violations without expanding comments. Identifies things like missing comment placeholders and incorrect placeholder ordering.",
      "flags": [
        "--check",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": undefined,
  "subcommandName": undefined,
}
`;

exports[`cli help cst to object > should parse and transform "tldraw-cli --help" to a valid object 1`] = `
{
  "arguments": [
    "<command>",
  ],
  "commandName": "tldraw-cli",
  "commands": [
    {
      "aliases": undefined,
      "arguments": [
        "<command>",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": true,
      "defaultValue": undefined,
      "description": "CLI tools for tldraw.",
      "flags": undefined,
      "parentCommandName": "tldraw-cli",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "<files|urls..>",
      ],
      "choices": undefined,
      "commandName": "export",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
      "flags": undefined,
      "parentCommandName": "tldraw-cli",
      "required": undefined,
      "type": undefined,
    },
    {
      "aliases": undefined,
      "arguments": [
        "[files-or-urls..]",
      ],
      "choices": undefined,
      "commandName": "open",
      "default": undefined,
      "defaultValue": undefined,
      "description": "Open a tldraw \`.tldr\` file or tldraw.com URL your default browser. Uses a locally-hosted instance of tldraw. Call \`open\` without an argument to open a blank sketch. Sketches opened via URL are temporarily copied to the local system, and will not be kept in sync with tldraw.com. This process does not exit until the browser is closed.",
      "flags": undefined,
      "parentCommandName": "tldraw-cli",
      "required": undefined,
      "type": undefined,
    },
  ],
  "description": "CLI tools for tldraw.",
  "options": [
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": undefined,
  "subcommandName": undefined,
}
`;

exports[`cli help cst to object > should parse and transform "tldraw-cli export --help" to a valid object 1`] = `
{
  "arguments": [
    "<files|urls..>",
  ],
  "commandName": "tldraw-cli",
  "commands": undefined,
  "description": "Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
  "options": [
    {
      "aliases": [
        "-f",
      ],
      "arguments": undefined,
      "choices": [
        ""png"",
        ""svg"",
        ""json"",
        ""tldr"",
      ],
      "commandName": undefined,
      "default": undefined,
      "defaultValue": ""svg"",
      "description": "Output image format.",
      "flags": [
        "--format",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-o",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": ""./"",
      "description": "Output image directory.",
      "flags": [
        "--output",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": [
        "-n",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "The original file name or URL id is used.",
      "description": "Output image name (without extension).",
      "flags": [
        "--name",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Export each sketch "frame" as a separate image. Pass one or more frame names or IDs to export specific frames, or skip the arguments to export all frames.",
      "flags": [
        "--frames",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "array",
    },
    {
      "aliases": [
        "-t",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Export an image with a transparent background.",
      "flags": [
        "--transparent",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-d",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Export a dark theme version of the image.",
      "flags": [
        "--dark-mode",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Remove \`<style>\` elements from SVG output, useful to lighten the load of embedded fonts if you intend to provide your own stylesheets. Applies to SVG output only.",
      "flags": [
        "--strip-style",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-p",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Print the exported image(s) to stdout instead of saving to a file. Incompatible with \`--output\`, and disregards \`--name\`. PNGs are printed as base64-encoded strings.",
      "flags": [
        "--print",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": undefined,
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": "false",
      "description": "Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.",
      "flags": [
        "--verbose",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-h",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show help",
      "flags": [
        "--help",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
    {
      "aliases": [
        "-v",
      ],
      "arguments": undefined,
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "Show version number",
      "flags": [
        "--version",
      ],
      "parentCommandName": undefined,
      "required": undefined,
      "type": "boolean",
    },
  ],
  "positionals": [
    {
      "aliases": undefined,
      "arguments": [
        "<files|urls..>",
      ],
      "choices": undefined,
      "commandName": undefined,
      "default": undefined,
      "defaultValue": undefined,
      "description": "The tldraw sketch to export. May be one or more paths to local \`.tldr\` files, or tldraw.com sketch URLs. Accepts a mix of both file paths and URLs, and supports glob matching via your shell. Prints the absolute path(s) to the exported image(s) to \`stdout\`.",
      "flags": undefined,
      "parentCommandName": undefined,
      "required": undefined,
      "type": "string",
    },
  ],
  "subcommandName": "export",
}
`;

exports[`cli help invocation > should correctly identify executables 1`] = `
"\`\`\`txt
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
\`\`\`"
`;

exports[`cli help invocation > should correctly resolve binary names that are in package.json but not on the path 1`] = `
"#### Command: \`mdat\`

Work with \`mdat\` placeholder comments in any Markdown file.

This section lists top-level commands for \`mdat\`.

If no command is provided, \`mdat expand\` is run by default.

Usage:

\`\`\`txt
mdat [command]
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`expand\` | \`<files..>\` \`[options]\` | Expand \`mdat\` placeholder comments. _(Default command.)_ |
| \`check\` | \`<files..>\` \`[options]\` | Validate a markdown file with \`mdat\` placeholder comments. |
| \`collapse\` | \`<files..>\` \`[options]\` | Collapse \`mdat\` placeholder comments. |
| \`readme\` | \`[command]\` | Work with \`mdat\` comments in your readme.md. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat expand\`

Expand \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat expand <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat check\`

Validate a markdown file with \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat check <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat collapse\`

Collapse \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat collapse <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Command: \`mdat readme\`

This section lists top-level commands for \`mdat readme\`.

If no command is provided, \`mdat readme expand\` is run by default.

Usage:

| Command | Argument | Description |
| --- | --- | --- |
| \`readme expand\` | \`[files..]\` \`[options]\` | Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules. _(Default command.)_ |
| \`readme check\` | \`[files..]\` \`[options]\` | Validate \`mdat\` placeholder comments in your readme.md. |
| \`readme collapse\` | \`[files..]\` \`[options]\` | Collapse \`mdat\` placeholder comments in your readme.md. |
| \`readme init\` | \`[options]\` | Interactively create a new readme.md file with sensible \`mdat\` comment placeholders. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat readme expand\`

Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.

Usage:

\`\`\`txt
mdat readme expand [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme check\`

Validate \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme check [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme collapse\`

Collapse \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme collapse [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme init\`

Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.

Usage:

\`\`\`txt
mdat readme init [options]
\`\`\`

| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--interactive\` | \`-i\` | Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt. | \`boolean\` | \`true\` |
| \`--overwrite\` |  | Replace an existing readme file if one is found. | \`boolean\` | \`false\`, if an existing readme is found, don't touch it. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--expand\` | \`-e\` | Automatically run \`mdat readme\` immediately after creating the readme template. | \`boolean\` | \`true\` |
| \`--template\` | \`-t\` | Specify a template to use for the new readme. | \`string\` | "Mdat Readme" |
| \`--compound\` | \`-c\` | Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical. | \`boolean\` | \`true\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help invocation > should fall back to a basic code block if the help output cannot be parsed 1`] = `
"\`\`\`txt
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
\`\`\`"
`;

exports[`cli help invocation > should get help markdown directly from the output of a command 1`] = `
"#### Command: \`mdat\`

Work with \`mdat\` placeholder comments in any Markdown file.

This section lists top-level commands for \`mdat\`.

If no command is provided, \`mdat expand\` is run by default.

Usage:

\`\`\`txt
mdat [command]
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`expand\` | \`<files..>\` \`[options]\` | Expand \`mdat\` placeholder comments. _(Default command.)_ |
| \`check\` | \`<files..>\` \`[options]\` | Validate a markdown file with \`mdat\` placeholder comments. |
| \`collapse\` | \`<files..>\` \`[options]\` | Collapse \`mdat\` placeholder comments. |
| \`readme\` | \`[command]\` | Work with \`mdat\` comments in your readme.md. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat expand\`

Expand \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat expand <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat check\`

Validate a markdown file with \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat check <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat collapse\`

Collapse \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat collapse <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Command: \`mdat readme\`

This section lists top-level commands for \`mdat readme\`.

If no command is provided, \`mdat readme expand\` is run by default.

Usage:

| Command | Argument | Description |
| --- | --- | --- |
| \`readme expand\` | \`[files..]\` \`[options]\` | Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules. _(Default command.)_ |
| \`readme check\` | \`[files..]\` \`[options]\` | Validate \`mdat\` placeholder comments in your readme.md. |
| \`readme collapse\` | \`[files..]\` \`[options]\` | Collapse \`mdat\` placeholder comments in your readme.md. |
| \`readme init\` | \`[options]\` | Interactively create a new readme.md file with sensible \`mdat\` comment placeholders. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat readme expand\`

Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.

Usage:

\`\`\`txt
mdat readme expand [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme check\`

Validate \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme check [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme collapse\`

Collapse \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme collapse [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme init\`

Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.

Usage:

\`\`\`txt
mdat readme init [options]
\`\`\`

| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--interactive\` | \`-i\` | Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt. | \`boolean\` | \`true\` |
| \`--overwrite\` |  | Replace an existing readme file if one is found. | \`boolean\` | \`false\`, if an existing readme is found, don't touch it. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--expand\` | \`-e\` | Automatically run \`mdat readme\` immediately after creating the readme template. | \`boolean\` | \`true\` |
| \`--template\` | \`-t\` | Specify a template to use for the new readme. | \`string\` | "Mdat Readme" |
| \`--compound\` | \`-c\` | Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical. | \`boolean\` | \`true\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help invocation > should try to infer the binary to get help from based on package.json 1`] = `
"#### Command: \`mdat\`

Work with \`mdat\` placeholder comments in any Markdown file.

This section lists top-level commands for \`mdat\`.

If no command is provided, \`mdat expand\` is run by default.

Usage:

\`\`\`txt
mdat [command]
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`expand\` | \`<files..>\` \`[options]\` | Expand \`mdat\` placeholder comments. _(Default command.)_ |
| \`check\` | \`<files..>\` \`[options]\` | Validate a markdown file with \`mdat\` placeholder comments. |
| \`collapse\` | \`<files..>\` \`[options]\` | Collapse \`mdat\` placeholder comments. |
| \`readme\` | \`[command]\` | Work with \`mdat\` comments in your readme.md. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat expand\`

Expand \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat expand <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat check\`

Validate a markdown file with \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat check <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat collapse\`

Collapse \`mdat\` placeholder comments.

Usage:

\`\`\`txt
mdat collapse <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to collapse. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Command: \`mdat readme\`

This section lists top-level commands for \`mdat readme\`.

If no command is provided, \`mdat readme expand\` is run by default.

Usage:

| Command | Argument | Description |
| --- | --- | --- |
| \`readme expand\` | \`[files..]\` \`[options]\` | Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules. _(Default command.)_ |
| \`readme check\` | \`[files..]\` \`[options]\` | Validate \`mdat\` placeholder comments in your readme.md. |
| \`readme collapse\` | \`[files..]\` \`[options]\` | Collapse \`mdat\` placeholder comments in your readme.md. |
| \`readme init\` | \`[options]\` | Interactively create a new readme.md file with sensible \`mdat\` comment placeholders. |


_See the sections below for more information on each subcommand._

#### Subcommand: \`mdat readme expand\`

Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.

Usage:

\`\`\`txt
mdat readme expand [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme check\`

Validate \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme check [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme collapse\`

Collapse \`mdat\` placeholder comments in your readme.md.

Usage:

\`\`\`txt
mdat readme collapse [files..] [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Readme file(s) with \`mdat\` placeholder comments to collapse. If not provided, the closest readme.md file is used. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |


#### Subcommand: \`mdat readme init\`

Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.

Usage:

\`\`\`txt
mdat readme init [options]
\`\`\`

| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--interactive\` | \`-i\` | Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt. | \`boolean\` | \`true\` |
| \`--overwrite\` |  | Replace an existing readme file if one is found. | \`boolean\` | \`false\`, if an existing readme is found, don't touch it. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--expand\` | \`-e\` | Automatically run \`mdat readme\` immediately after creating the readme template. | \`boolean\` | \`true\` |
| \`--template\` | \`-t\` | Specify a template to use for the new readme. | \`string\` | "Mdat Readme" |
| \`--compound\` | \`-c\` | Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical. | \`boolean\` | \`true\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help lexing > should lex "mdat --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 4,
      "endLine": 1,
      "endOffset": 3,
      "image": "mdat",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 14,
      "endLine": 1,
      "endOffset": 13,
      "image": "<files..>",
      "startColumn": 6,
      "startLine": 1,
      "startOffset": 5,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 24,
      "endLine": 1,
      "endOffset": 23,
      "image": "[options]",
      "startColumn": 16,
      "startLine": 1,
      "startOffset": 15,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 21,
      "endLine": 3,
      "endOffset": 46,
      "image": "description goes here",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 26,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 10,
      "endLine": 5,
      "endOffset": 58,
      "image": "Commands:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 49,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Commands:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startCommandsSection",
        "tokenTypeIdx": 19,
      },
      "tokenTypeIdx": 19,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 60,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 59,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 6,
      "endOffset": 64,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 61,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 16,
      "endLine": 6,
      "endOffset": 74,
      "image": "[command]",
      "startColumn": 8,
      "startLine": 6,
      "startOffset": 66,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 26,
      "endLine": 6,
      "endOffset": 84,
      "image": "[options]",
      "startColumn": 18,
      "startLine": 6,
      "startOffset": 76,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 96,
      "endLine": 6,
      "endOffset": 154,
      "image": "  Note: \`expand\` is the default and only command at the moment.",
      "startColumn": 34,
      "startLine": 6,
      "startOffset": 92,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 2,
      "endLine": 7,
      "endOffset": 157,
      "image": "  ",
      "startColumn": 1,
      "startLine": 7,
      "startOffset": 156,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 7,
      "endOffset": 161,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 7,
      "startOffset": 158,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 13,
      "endLine": 7,
      "endOffset": 168,
      "image": "expand",
      "startColumn": 8,
      "startLine": 7,
      "startOffset": 163,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 23,
      "endLine": 7,
      "endOffset": 178,
      "image": "<files..>",
      "startColumn": 15,
      "startLine": 7,
      "startOffset": 170,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 33,
      "endLine": 7,
      "endOffset": 188,
      "image": "[options]",
      "startColumn": 25,
      "startLine": 7,
      "startOffset": 180,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 58,
      "endLine": 7,
      "endOffset": 213,
      "image": "  description goes here  ",
      "startColumn": 34,
      "startLine": 7,
      "startOffset": 189,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 67,
      "endLine": 7,
      "endOffset": 222,
      "image": "[default]",
      "startColumn": 59,
      "startLine": 7,
      "startOffset": 214,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfo",
        "tokenTypeIdx": 9,
      },
      "tokenTypeIdx": 9,
    },
    {
      "endColumn": 13,
      "endLine": 9,
      "endOffset": 237,
      "image": "Positionals:
",
      "startColumn": 1,
      "startLine": 9,
      "startOffset": 225,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Positionals:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startPositionalsSection",
        "tokenTypeIdx": 18,
      },
      "tokenTypeIdx": 18,
    },
    {
      "endColumn": 2,
      "endLine": 10,
      "endOffset": 239,
      "image": "  ",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 238,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 7,
      "endLine": 10,
      "endOffset": 244,
      "image": "files",
      "startColumn": 3,
      "startLine": 10,
      "startOffset": 240,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 71,
      "endLine": 10,
      "endOffset": 308,
      "image": "  Markdown file(s) with \`mdat\` placeholder comments to expand.  ",
      "startColumn": 8,
      "startLine": 10,
      "startOffset": 245,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 79,
      "endLine": 10,
      "endOffset": 316,
      "image": "[string]",
      "startColumn": 72,
      "startLine": 10,
      "startOffset": 309,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 9,
      "endLine": 12,
      "endOffset": 327,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 319,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 6,
      "endLine": 13,
      "endOffset": 333,
      "image": "      ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 328,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 13,
      "endOffset": 341,
      "image": "--config",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 334,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 60,
      "endLine": 13,
      "endOffset": 387,
      "image": "  Path(s) to files containing mdat configs.  ",
      "startColumn": 16,
      "startLine": 13,
      "startOffset": 343,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 67,
      "endLine": 13,
      "endOffset": 394,
      "image": "[array]",
      "startColumn": 61,
      "startLine": 13,
      "startOffset": 388,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 156,
      "endLine": 13,
      "endOffset": 483,
      "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
      "startColumn": 69,
      "startLine": 13,
      "startOffset": 396,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 14,
      "endOffset": 486,
      "image": "  ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 485,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 14,
      "endOffset": 488,
      "image": "-r",
      "startColumn": 3,
      "startLine": 14,
      "startOffset": 487,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 14,
      "endOffset": 497,
      "image": "--rules",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 491,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 76,
      "endLine": 14,
      "endOffset": 560,
      "image": "  Path(s) to files containing mdat comment expansion rules.  ",
      "startColumn": 16,
      "startLine": 14,
      "startOffset": 500,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 83,
      "endLine": 14,
      "endOffset": 567,
      "image": "[array]",
      "startColumn": 77,
      "startLine": 14,
      "startOffset": 561,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 15,
      "endOffset": 570,
      "image": "  ",
      "startColumn": 1,
      "startLine": 15,
      "startOffset": 569,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 15,
      "endOffset": 572,
      "image": "-o",
      "startColumn": 3,
      "startLine": 15,
      "startOffset": 571,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 15,
      "endOffset": 582,
      "image": "--output",
      "startColumn": 7,
      "startLine": 15,
      "startOffset": 575,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 41,
      "endLine": 15,
      "endOffset": 609,
      "image": "  Output file directory.  ",
      "startColumn": 16,
      "startLine": 15,
      "startOffset": 584,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 49,
      "endLine": 15,
      "endOffset": 617,
      "image": "[string]",
      "startColumn": 42,
      "startLine": 15,
      "startOffset": 610,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 90,
      "endLine": 15,
      "endOffset": 658,
      "image": "[default: Same directory as input file.]",
      "startColumn": 51,
      "startLine": 15,
      "startOffset": 619,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 16,
      "endOffset": 661,
      "image": "  ",
      "startColumn": 1,
      "startLine": 16,
      "startOffset": 660,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 16,
      "endOffset": 663,
      "image": "-n",
      "startColumn": 3,
      "startLine": 16,
      "startOffset": 662,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 16,
      "endOffset": 671,
      "image": "--name",
      "startColumn": 7,
      "startLine": 16,
      "startOffset": 666,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 36,
      "endLine": 16,
      "endOffset": 695,
      "image": "  Output file name.  ",
      "startColumn": 16,
      "startLine": 16,
      "startOffset": 675,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 44,
      "endLine": 16,
      "endOffset": 703,
      "image": "[string]",
      "startColumn": 37,
      "startLine": 16,
      "startOffset": 696,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 107,
      "endLine": 16,
      "endOffset": 766,
      "image": "[default: Same name as input file. Overwrites the input file.]",
      "startColumn": 46,
      "startLine": 16,
      "startOffset": 705,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 17,
      "endOffset": 773,
      "image": "      ",
      "startColumn": 1,
      "startLine": 17,
      "startOffset": 768,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 17,
      "endOffset": 780,
      "image": "--print",
      "startColumn": 7,
      "startLine": 17,
      "startOffset": 774,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 126,
      "endLine": 17,
      "endOffset": 893,
      "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
      "startColumn": 16,
      "startLine": 17,
      "startOffset": 783,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 135,
      "endLine": 17,
      "endOffset": 902,
      "image": "[boolean]",
      "startColumn": 127,
      "startLine": 17,
      "startOffset": 894,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 152,
      "endLine": 17,
      "endOffset": 919,
      "image": "[default: false]",
      "startColumn": 137,
      "startLine": 17,
      "startOffset": 904,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 18,
      "endOffset": 926,
      "image": "      ",
      "startColumn": 1,
      "startLine": 18,
      "startOffset": 921,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 18,
      "endOffset": 934,
      "image": "--prefix",
      "startColumn": 7,
      "startLine": 18,
      "startOffset": 927,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 222,
      "endLine": 18,
      "endOffset": 1142,
      "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
      "startColumn": 16,
      "startLine": 18,
      "startOffset": 936,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 230,
      "endLine": 18,
      "endOffset": 1150,
      "image": "[string]",
      "startColumn": 223,
      "startLine": 18,
      "startOffset": 1143,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 19,
      "endOffset": 1153,
      "image": "  ",
      "startColumn": 1,
      "startLine": 19,
      "startOffset": 1152,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 19,
      "endOffset": 1155,
      "image": "-m",
      "startColumn": 3,
      "startLine": 19,
      "startOffset": 1154,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 19,
      "endOffset": 1163,
      "image": "--meta",
      "startColumn": 7,
      "startLine": 19,
      "startOffset": 1158,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 199,
      "endLine": 19,
      "endOffset": 1350,
      "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
      "startColumn": 16,
      "startLine": 19,
      "startOffset": 1167,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 208,
      "endLine": 19,
      "endOffset": 1359,
      "image": "[boolean]",
      "startColumn": 200,
      "startLine": 19,
      "startOffset": 1351,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 225,
      "endLine": 19,
      "endOffset": 1376,
      "image": "[default: false]",
      "startColumn": 210,
      "startLine": 19,
      "startOffset": 1361,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 20,
      "endOffset": 1379,
      "image": "  ",
      "startColumn": 1,
      "startLine": 20,
      "startOffset": 1378,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 20,
      "endOffset": 1381,
      "image": "-c",
      "startColumn": 3,
      "startLine": 20,
      "startOffset": 1380,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 20,
      "endOffset": 1390,
      "image": "--check",
      "startColumn": 7,
      "startLine": 20,
      "startOffset": 1384,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 172,
      "endLine": 20,
      "endOffset": 1549,
      "image": "  Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
      "startColumn": 16,
      "startLine": 20,
      "startOffset": 1393,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 181,
      "endLine": 20,
      "endOffset": 1558,
      "image": "[boolean]",
      "startColumn": 173,
      "startLine": 20,
      "startOffset": 1550,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 198,
      "endLine": 20,
      "endOffset": 1575,
      "image": "[default: false]",
      "startColumn": 183,
      "startLine": 20,
      "startOffset": 1560,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 21,
      "endOffset": 1582,
      "image": "      ",
      "startColumn": 1,
      "startLine": 21,
      "startOffset": 1577,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 21,
      "endOffset": 1591,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 21,
      "startOffset": 1583,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 146,
      "endLine": 21,
      "endOffset": 1722,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
      "startColumn": 16,
      "startLine": 21,
      "startOffset": 1592,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 155,
      "endLine": 21,
      "endOffset": 1731,
      "image": "[boolean]",
      "startColumn": 147,
      "startLine": 21,
      "startOffset": 1723,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 172,
      "endLine": 21,
      "endOffset": 1748,
      "image": "[default: false]",
      "startColumn": 157,
      "startLine": 21,
      "startOffset": 1733,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 22,
      "endOffset": 1751,
      "image": "  ",
      "startColumn": 1,
      "startLine": 22,
      "startOffset": 1750,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 22,
      "endOffset": 1753,
      "image": "-h",
      "startColumn": 3,
      "startLine": 22,
      "startOffset": 1752,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 22,
      "endOffset": 1761,
      "image": "--help",
      "startColumn": 7,
      "startLine": 22,
      "startOffset": 1756,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 28,
      "endLine": 22,
      "endOffset": 1777,
      "image": "  Show help  ",
      "startColumn": 16,
      "startLine": 22,
      "startOffset": 1765,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 37,
      "endLine": 22,
      "endOffset": 1786,
      "image": "[boolean]",
      "startColumn": 29,
      "startLine": 22,
      "startOffset": 1778,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 23,
      "endOffset": 1789,
      "image": "  ",
      "startColumn": 1,
      "startLine": 23,
      "startOffset": 1788,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 23,
      "endOffset": 1791,
      "image": "-v",
      "startColumn": 3,
      "startLine": 23,
      "startOffset": 1790,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 23,
      "endOffset": 1802,
      "image": "--version",
      "startColumn": 7,
      "startLine": 23,
      "startOffset": 1794,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 38,
      "endLine": 23,
      "endOffset": 1825,
      "image": "  Show version number  ",
      "startColumn": 16,
      "startLine": 23,
      "startOffset": 1803,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 47,
      "endLine": 23,
      "endOffset": 1834,
      "image": "[boolean]",
      "startColumn": 39,
      "startLine": 23,
      "startOffset": 1826,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "mdat expand --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 4,
      "endLine": 1,
      "endOffset": 3,
      "image": "mdat",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 11,
      "endLine": 1,
      "endOffset": 10,
      "image": "expand",
      "startColumn": 6,
      "startLine": 1,
      "startOffset": 5,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 21,
      "endLine": 1,
      "endOffset": 20,
      "image": "<files..>",
      "startColumn": 13,
      "startLine": 1,
      "startOffset": 12,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 31,
      "endLine": 1,
      "endOffset": 30,
      "image": "[options]",
      "startColumn": 23,
      "startLine": 1,
      "startOffset": 22,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 21,
      "endLine": 3,
      "endOffset": 53,
      "image": "description goes here",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 33,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 13,
      "endLine": 5,
      "endOffset": 68,
      "image": "Positionals:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 56,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Positionals:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startPositionalsSection",
        "tokenTypeIdx": 18,
      },
      "tokenTypeIdx": 18,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 70,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 69,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 7,
      "endLine": 6,
      "endOffset": 75,
      "image": "files",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 71,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 71,
      "endLine": 6,
      "endOffset": 139,
      "image": "  Markdown file(s) with \`mdat\` placeholder comments to expand.  ",
      "startColumn": 8,
      "startLine": 6,
      "startOffset": 76,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 79,
      "endLine": 6,
      "endOffset": 147,
      "image": "[string]",
      "startColumn": 72,
      "startLine": 6,
      "startOffset": 140,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 90,
      "endLine": 6,
      "endOffset": 158,
      "image": "[required]",
      "startColumn": 81,
      "startLine": 6,
      "startOffset": 149,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[required\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "required",
        "tokenTypeIdx": 10,
      },
      "tokenTypeIdx": 10,
    },
    {
      "endColumn": 9,
      "endLine": 8,
      "endOffset": 169,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 161,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 6,
      "endLine": 9,
      "endOffset": 175,
      "image": "      ",
      "startColumn": 1,
      "startLine": 9,
      "startOffset": 170,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 9,
      "endOffset": 183,
      "image": "--config",
      "startColumn": 7,
      "startLine": 9,
      "startOffset": 176,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 60,
      "endLine": 9,
      "endOffset": 229,
      "image": "  Path(s) to files containing mdat configs.  ",
      "startColumn": 16,
      "startLine": 9,
      "startOffset": 185,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 67,
      "endLine": 9,
      "endOffset": 236,
      "image": "[array]",
      "startColumn": 61,
      "startLine": 9,
      "startOffset": 230,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 156,
      "endLine": 9,
      "endOffset": 325,
      "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
      "startColumn": 69,
      "startLine": 9,
      "startOffset": 238,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 10,
      "endOffset": 328,
      "image": "  ",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 327,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 10,
      "endOffset": 330,
      "image": "-r",
      "startColumn": 3,
      "startLine": 10,
      "startOffset": 329,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 10,
      "endOffset": 339,
      "image": "--rules",
      "startColumn": 7,
      "startLine": 10,
      "startOffset": 333,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 76,
      "endLine": 10,
      "endOffset": 402,
      "image": "  Path(s) to files containing mdat comment expansion rules.  ",
      "startColumn": 16,
      "startLine": 10,
      "startOffset": 342,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 83,
      "endLine": 10,
      "endOffset": 409,
      "image": "[array]",
      "startColumn": 77,
      "startLine": 10,
      "startOffset": 403,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 11,
      "endOffset": 412,
      "image": "  ",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 411,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 11,
      "endOffset": 414,
      "image": "-o",
      "startColumn": 3,
      "startLine": 11,
      "startOffset": 413,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 11,
      "endOffset": 424,
      "image": "--output",
      "startColumn": 7,
      "startLine": 11,
      "startOffset": 417,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 41,
      "endLine": 11,
      "endOffset": 451,
      "image": "  Output file directory.  ",
      "startColumn": 16,
      "startLine": 11,
      "startOffset": 426,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 49,
      "endLine": 11,
      "endOffset": 459,
      "image": "[string]",
      "startColumn": 42,
      "startLine": 11,
      "startOffset": 452,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 90,
      "endLine": 11,
      "endOffset": 500,
      "image": "[default: Same directory as input file.]",
      "startColumn": 51,
      "startLine": 11,
      "startOffset": 461,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 12,
      "endOffset": 503,
      "image": "  ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 502,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 12,
      "endOffset": 505,
      "image": "-n",
      "startColumn": 3,
      "startLine": 12,
      "startOffset": 504,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 12,
      "endOffset": 513,
      "image": "--name",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 508,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 36,
      "endLine": 12,
      "endOffset": 537,
      "image": "  Output file name.  ",
      "startColumn": 16,
      "startLine": 12,
      "startOffset": 517,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 44,
      "endLine": 12,
      "endOffset": 545,
      "image": "[string]",
      "startColumn": 37,
      "startLine": 12,
      "startOffset": 538,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 107,
      "endLine": 12,
      "endOffset": 608,
      "image": "[default: Same name as input file. Overwrites the input file.]",
      "startColumn": 46,
      "startLine": 12,
      "startOffset": 547,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 13,
      "endOffset": 615,
      "image": "      ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 610,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 13,
      "endOffset": 622,
      "image": "--print",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 616,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 126,
      "endLine": 13,
      "endOffset": 735,
      "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
      "startColumn": 16,
      "startLine": 13,
      "startOffset": 625,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 135,
      "endLine": 13,
      "endOffset": 744,
      "image": "[boolean]",
      "startColumn": 127,
      "startLine": 13,
      "startOffset": 736,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 152,
      "endLine": 13,
      "endOffset": 761,
      "image": "[default: false]",
      "startColumn": 137,
      "startLine": 13,
      "startOffset": 746,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 14,
      "endOffset": 768,
      "image": "      ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 763,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 14,
      "endOffset": 776,
      "image": "--prefix",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 769,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 222,
      "endLine": 14,
      "endOffset": 984,
      "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
      "startColumn": 16,
      "startLine": 14,
      "startOffset": 778,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 230,
      "endLine": 14,
      "endOffset": 992,
      "image": "[string]",
      "startColumn": 223,
      "startLine": 14,
      "startOffset": 985,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 15,
      "endOffset": 995,
      "image": "  ",
      "startColumn": 1,
      "startLine": 15,
      "startOffset": 994,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 15,
      "endOffset": 997,
      "image": "-m",
      "startColumn": 3,
      "startLine": 15,
      "startOffset": 996,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 15,
      "endOffset": 1005,
      "image": "--meta",
      "startColumn": 7,
      "startLine": 15,
      "startOffset": 1000,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 199,
      "endLine": 15,
      "endOffset": 1192,
      "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
      "startColumn": 16,
      "startLine": 15,
      "startOffset": 1009,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 208,
      "endLine": 15,
      "endOffset": 1201,
      "image": "[boolean]",
      "startColumn": 200,
      "startLine": 15,
      "startOffset": 1193,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 225,
      "endLine": 15,
      "endOffset": 1218,
      "image": "[default: false]",
      "startColumn": 210,
      "startLine": 15,
      "startOffset": 1203,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 16,
      "endOffset": 1221,
      "image": "  ",
      "startColumn": 1,
      "startLine": 16,
      "startOffset": 1220,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 16,
      "endOffset": 1223,
      "image": "-c",
      "startColumn": 3,
      "startLine": 16,
      "startOffset": 1222,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 16,
      "endOffset": 1232,
      "image": "--check",
      "startColumn": 7,
      "startLine": 16,
      "startOffset": 1226,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 172,
      "endLine": 16,
      "endOffset": 1391,
      "image": "  Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
      "startColumn": 16,
      "startLine": 16,
      "startOffset": 1235,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 181,
      "endLine": 16,
      "endOffset": 1400,
      "image": "[boolean]",
      "startColumn": 173,
      "startLine": 16,
      "startOffset": 1392,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 198,
      "endLine": 16,
      "endOffset": 1417,
      "image": "[default: false]",
      "startColumn": 183,
      "startLine": 16,
      "startOffset": 1402,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 17,
      "endOffset": 1424,
      "image": "      ",
      "startColumn": 1,
      "startLine": 17,
      "startOffset": 1419,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 17,
      "endOffset": 1433,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 17,
      "startOffset": 1425,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 146,
      "endLine": 17,
      "endOffset": 1564,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
      "startColumn": 16,
      "startLine": 17,
      "startOffset": 1434,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 155,
      "endLine": 17,
      "endOffset": 1573,
      "image": "[boolean]",
      "startColumn": 147,
      "startLine": 17,
      "startOffset": 1565,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 172,
      "endLine": 17,
      "endOffset": 1590,
      "image": "[default: false]",
      "startColumn": 157,
      "startLine": 17,
      "startOffset": 1575,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 18,
      "endOffset": 1593,
      "image": "  ",
      "startColumn": 1,
      "startLine": 18,
      "startOffset": 1592,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 18,
      "endOffset": 1595,
      "image": "-h",
      "startColumn": 3,
      "startLine": 18,
      "startOffset": 1594,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 18,
      "endOffset": 1603,
      "image": "--help",
      "startColumn": 7,
      "startLine": 18,
      "startOffset": 1598,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 28,
      "endLine": 18,
      "endOffset": 1619,
      "image": "  Show help  ",
      "startColumn": 16,
      "startLine": 18,
      "startOffset": 1607,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 37,
      "endLine": 18,
      "endOffset": 1628,
      "image": "[boolean]",
      "startColumn": 29,
      "startLine": 18,
      "startOffset": 1620,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 19,
      "endOffset": 1631,
      "image": "  ",
      "startColumn": 1,
      "startLine": 19,
      "startOffset": 1630,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 19,
      "endOffset": 1633,
      "image": "-v",
      "startColumn": 3,
      "startLine": 19,
      "startOffset": 1632,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 19,
      "endOffset": 1644,
      "image": "--version",
      "startColumn": 7,
      "startLine": 19,
      "startOffset": 1636,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 38,
      "endLine": 19,
      "endOffset": 1667,
      "image": "  Show version number  ",
      "startColumn": 16,
      "startLine": 19,
      "startOffset": 1645,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 47,
      "endLine": 19,
      "endOffset": 1676,
      "image": "[boolean]",
      "startColumn": 39,
      "startLine": 19,
      "startOffset": 1668,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "mdat readme --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 4,
      "endLine": 1,
      "endOffset": 3,
      "image": "mdat",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 11,
      "endLine": 1,
      "endOffset": 10,
      "image": "readme",
      "startColumn": 6,
      "startLine": 1,
      "startOffset": 5,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 21,
      "endLine": 1,
      "endOffset": 20,
      "image": "[command]",
      "startColumn": 13,
      "startLine": 1,
      "startOffset": 12,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 31,
      "endLine": 1,
      "endOffset": 30,
      "image": "[options]",
      "startColumn": 23,
      "startLine": 1,
      "startOffset": 22,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 44,
      "endLine": 3,
      "endOffset": 76,
      "image": "Work with \`mdat\` comments in your readme.md.",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 33,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 10,
      "endLine": 5,
      "endOffset": 88,
      "image": "Commands:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 79,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Commands:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startCommandsSection",
        "tokenTypeIdx": 19,
      },
      "tokenTypeIdx": 19,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 90,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 89,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 6,
      "endOffset": 94,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 91,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 13,
      "endLine": 6,
      "endOffset": 101,
      "image": "readme",
      "startColumn": 8,
      "startLine": 6,
      "startOffset": 96,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 20,
      "endLine": 6,
      "endOffset": 108,
      "image": "expand",
      "startColumn": 15,
      "startLine": 6,
      "startOffset": 103,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 30,
      "endLine": 6,
      "endOffset": 118,
      "image": "[options]",
      "startColumn": 22,
      "startLine": 6,
      "startOffset": 110,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 142,
      "endLine": 6,
      "endOffset": 230,
      "image": "  Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.  ",
      "startColumn": 31,
      "startLine": 6,
      "startOffset": 119,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 151,
      "endLine": 6,
      "endOffset": 239,
      "image": "[default]",
      "startColumn": 143,
      "startLine": 6,
      "startOffset": 231,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfo",
        "tokenTypeIdx": 9,
      },
      "tokenTypeIdx": 9,
    },
    {
      "endColumn": 2,
      "endLine": 7,
      "endOffset": 242,
      "image": "  ",
      "startColumn": 1,
      "startLine": 7,
      "startOffset": 241,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 7,
      "endOffset": 246,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 7,
      "startOffset": 243,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 13,
      "endLine": 7,
      "endOffset": 253,
      "image": "readme",
      "startColumn": 8,
      "startLine": 7,
      "startOffset": 248,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 19,
      "endLine": 7,
      "endOffset": 259,
      "image": "check",
      "startColumn": 15,
      "startLine": 7,
      "startOffset": 255,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 29,
      "endLine": 7,
      "endOffset": 269,
      "image": "[options]",
      "startColumn": 21,
      "startLine": 7,
      "startOffset": 261,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 87,
      "endLine": 7,
      "endOffset": 327,
      "image": "  Validate \`mdat\` placeholder comments in your readme.md.",
      "startColumn": 31,
      "startLine": 7,
      "startOffset": 271,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 2,
      "endLine": 8,
      "endOffset": 330,
      "image": "  ",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 329,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 8,
      "endOffset": 334,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 8,
      "startOffset": 331,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 13,
      "endLine": 8,
      "endOffset": 341,
      "image": "readme",
      "startColumn": 8,
      "startLine": 8,
      "startOffset": 336,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 19,
      "endLine": 8,
      "endOffset": 347,
      "image": "clean",
      "startColumn": 15,
      "startLine": 8,
      "startOffset": 343,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 29,
      "endLine": 8,
      "endOffset": 357,
      "image": "[options]",
      "startColumn": 21,
      "startLine": 8,
      "startOffset": 349,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 87,
      "endLine": 8,
      "endOffset": 415,
      "image": "  Collapse \`mdat\` placeholder comments in your readme.md.",
      "startColumn": 31,
      "startLine": 8,
      "startOffset": 359,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 2,
      "endLine": 9,
      "endOffset": 418,
      "image": "  ",
      "startColumn": 1,
      "startLine": 9,
      "startOffset": 417,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 6,
      "endLine": 9,
      "endOffset": 422,
      "image": "mdat",
      "startColumn": 3,
      "startLine": 9,
      "startOffset": 419,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 13,
      "endLine": 9,
      "endOffset": 429,
      "image": "readme",
      "startColumn": 8,
      "startLine": 9,
      "startOffset": 424,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 18,
      "endLine": 9,
      "endOffset": 434,
      "image": "init",
      "startColumn": 15,
      "startLine": 9,
      "startOffset": 431,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 28,
      "endLine": 9,
      "endOffset": 444,
      "image": "[options]",
      "startColumn": 20,
      "startLine": 9,
      "startOffset": 436,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 116,
      "endLine": 9,
      "endOffset": 532,
      "image": "  Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
      "startColumn": 31,
      "startLine": 9,
      "startOffset": 447,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 9,
      "endLine": 11,
      "endOffset": 543,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 535,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 6,
      "endLine": 12,
      "endOffset": 549,
      "image": "      ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 544,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 12,
      "endOffset": 557,
      "image": "--config",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 550,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 60,
      "endLine": 12,
      "endOffset": 603,
      "image": "  Path(s) to files containing mdat configs.  ",
      "startColumn": 16,
      "startLine": 12,
      "startOffset": 559,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 67,
      "endLine": 12,
      "endOffset": 610,
      "image": "[array]",
      "startColumn": 61,
      "startLine": 12,
      "startOffset": 604,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 156,
      "endLine": 12,
      "endOffset": 699,
      "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
      "startColumn": 69,
      "startLine": 12,
      "startOffset": 612,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 13,
      "endOffset": 702,
      "image": "  ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 701,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 13,
      "endOffset": 704,
      "image": "-r",
      "startColumn": 3,
      "startLine": 13,
      "startOffset": 703,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 13,
      "endOffset": 713,
      "image": "--rules",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 707,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 78,
      "endLine": 13,
      "endOffset": 778,
      "image": "  Path(s) to files containing \`mdat\` comment expansion rules.  ",
      "startColumn": 16,
      "startLine": 13,
      "startOffset": 716,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 85,
      "endLine": 13,
      "endOffset": 785,
      "image": "[array]",
      "startColumn": 79,
      "startLine": 13,
      "startOffset": 779,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 14,
      "endOffset": 788,
      "image": "  ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 787,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 14,
      "endOffset": 790,
      "image": "-o",
      "startColumn": 3,
      "startLine": 14,
      "startOffset": 789,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 14,
      "endOffset": 800,
      "image": "--output",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 793,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 41,
      "endLine": 14,
      "endOffset": 827,
      "image": "  Output file directory.  ",
      "startColumn": 16,
      "startLine": 14,
      "startOffset": 802,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 49,
      "endLine": 14,
      "endOffset": 835,
      "image": "[string]",
      "startColumn": 42,
      "startLine": 14,
      "startOffset": 828,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 90,
      "endLine": 14,
      "endOffset": 876,
      "image": "[default: Same directory as input file.]",
      "startColumn": 51,
      "startLine": 14,
      "startOffset": 837,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 15,
      "endOffset": 879,
      "image": "  ",
      "startColumn": 1,
      "startLine": 15,
      "startOffset": 878,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 15,
      "endOffset": 881,
      "image": "-n",
      "startColumn": 3,
      "startLine": 15,
      "startOffset": 880,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 15,
      "endOffset": 889,
      "image": "--name",
      "startColumn": 7,
      "startLine": 15,
      "startOffset": 884,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 36,
      "endLine": 15,
      "endOffset": 913,
      "image": "  Output file name.  ",
      "startColumn": 16,
      "startLine": 15,
      "startOffset": 893,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 44,
      "endLine": 15,
      "endOffset": 921,
      "image": "[string]",
      "startColumn": 37,
      "startLine": 15,
      "startOffset": 914,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 107,
      "endLine": 15,
      "endOffset": 984,
      "image": "[default: Same name as input file. Overwrites the input file.]",
      "startColumn": 46,
      "startLine": 15,
      "startOffset": 923,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 16,
      "endOffset": 991,
      "image": "      ",
      "startColumn": 1,
      "startLine": 16,
      "startOffset": 986,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 16,
      "endOffset": 999,
      "image": "--readme",
      "startColumn": 7,
      "startLine": 16,
      "startOffset": 992,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 56,
      "endLine": 16,
      "endOffset": 1041,
      "image": "  Path to the readme.md file to expand.  ",
      "startColumn": 16,
      "startLine": 16,
      "startOffset": 1001,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 64,
      "endLine": 16,
      "endOffset": 1049,
      "image": "[string]",
      "startColumn": 57,
      "startLine": 16,
      "startOffset": 1042,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 122,
      "endLine": 16,
      "endOffset": 1107,
      "image": "[default: The closest readme.md file is used by default.]",
      "startColumn": 66,
      "startLine": 16,
      "startOffset": 1051,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 17,
      "endOffset": 1114,
      "image": "      ",
      "startColumn": 1,
      "startLine": 17,
      "startOffset": 1109,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 17,
      "endOffset": 1123,
      "image": "--package",
      "startColumn": 7,
      "startLine": 17,
      "startOffset": 1115,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 79,
      "endLine": 17,
      "endOffset": 1187,
      "image": "  Path to the package.json file to use to populate the readme.  ",
      "startColumn": 16,
      "startLine": 17,
      "startOffset": 1124,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 87,
      "endLine": 17,
      "endOffset": 1195,
      "image": "[string]",
      "startColumn": 80,
      "startLine": 17,
      "startOffset": 1188,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 148,
      "endLine": 17,
      "endOffset": 1256,
      "image": "[default: The closest package.json file is used by default.]",
      "startColumn": 89,
      "startLine": 17,
      "startOffset": 1197,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 18,
      "endOffset": 1263,
      "image": "      ",
      "startColumn": 1,
      "startLine": 18,
      "startOffset": 1258,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 18,
      "endOffset": 1271,
      "image": "--assets",
      "startColumn": 7,
      "startLine": 18,
      "startOffset": 1264,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 63,
      "endLine": 18,
      "endOffset": 1320,
      "image": "  Path to find and save readme-related assets.  ",
      "startColumn": 16,
      "startLine": 18,
      "startOffset": 1273,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 71,
      "endLine": 18,
      "endOffset": 1328,
      "image": "[string]",
      "startColumn": 64,
      "startLine": 18,
      "startOffset": 1321,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 91,
      "endLine": 18,
      "endOffset": 1348,
      "image": "[default: ./assets]",
      "startColumn": 73,
      "startLine": 18,
      "startOffset": 1330,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 19,
      "endOffset": 1355,
      "image": "      ",
      "startColumn": 1,
      "startLine": 19,
      "startOffset": 1350,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 19,
      "endOffset": 1363,
      "image": "--prefix",
      "startColumn": 7,
      "startLine": 19,
      "startOffset": 1356,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 224,
      "endLine": 19,
      "endOffset": 1573,
      "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety.  ",
      "startColumn": 16,
      "startLine": 19,
      "startOffset": 1365,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 232,
      "endLine": 19,
      "endOffset": 1581,
      "image": "[string]",
      "startColumn": 225,
      "startLine": 19,
      "startOffset": 1574,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 20,
      "endOffset": 1584,
      "image": "  ",
      "startColumn": 1,
      "startLine": 20,
      "startOffset": 1583,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 20,
      "endOffset": 1586,
      "image": "-m",
      "startColumn": 3,
      "startLine": 20,
      "startOffset": 1585,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 20,
      "endOffset": 1594,
      "image": "--meta",
      "startColumn": 7,
      "startLine": 20,
      "startOffset": 1589,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 199,
      "endLine": 20,
      "endOffset": 1781,
      "image": "  Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
      "startColumn": 16,
      "startLine": 20,
      "startOffset": 1598,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 208,
      "endLine": 20,
      "endOffset": 1790,
      "image": "[boolean]",
      "startColumn": 200,
      "startLine": 20,
      "startOffset": 1782,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 6,
      "endLine": 21,
      "endOffset": 1797,
      "image": "      ",
      "startColumn": 1,
      "startLine": 21,
      "startOffset": 1792,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 21,
      "endOffset": 1804,
      "image": "--print",
      "startColumn": 7,
      "startLine": 21,
      "startOffset": 1798,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 126,
      "endLine": 21,
      "endOffset": 1917,
      "image": "  Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
      "startColumn": 16,
      "startLine": 21,
      "startOffset": 1807,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 135,
      "endLine": 21,
      "endOffset": 1926,
      "image": "[boolean]",
      "startColumn": 127,
      "startLine": 21,
      "startOffset": 1918,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 6,
      "endLine": 22,
      "endOffset": 1933,
      "image": "      ",
      "startColumn": 1,
      "startLine": 22,
      "startOffset": 1928,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 22,
      "endOffset": 1942,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 22,
      "startOffset": 1934,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 144,
      "endLine": 22,
      "endOffset": 2071,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.  ",
      "startColumn": 16,
      "startLine": 22,
      "startOffset": 1943,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 153,
      "endLine": 22,
      "endOffset": 2080,
      "image": "[boolean]",
      "startColumn": 145,
      "startLine": 22,
      "startOffset": 2072,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 23,
      "endOffset": 2083,
      "image": "  ",
      "startColumn": 1,
      "startLine": 23,
      "startOffset": 2082,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 23,
      "endOffset": 2085,
      "image": "-h",
      "startColumn": 3,
      "startLine": 23,
      "startOffset": 2084,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 23,
      "endOffset": 2093,
      "image": "--help",
      "startColumn": 7,
      "startLine": 23,
      "startOffset": 2088,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 28,
      "endLine": 23,
      "endOffset": 2109,
      "image": "  Show help  ",
      "startColumn": 16,
      "startLine": 23,
      "startOffset": 2097,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 37,
      "endLine": 23,
      "endOffset": 2118,
      "image": "[boolean]",
      "startColumn": 29,
      "startLine": 23,
      "startOffset": 2110,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 24,
      "endOffset": 2121,
      "image": "  ",
      "startColumn": 1,
      "startLine": 24,
      "startOffset": 2120,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 24,
      "endOffset": 2123,
      "image": "-v",
      "startColumn": 3,
      "startLine": 24,
      "startOffset": 2122,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 24,
      "endOffset": 2134,
      "image": "--version",
      "startColumn": 7,
      "startLine": 24,
      "startOffset": 2126,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 38,
      "endLine": 24,
      "endOffset": 2157,
      "image": "  Show version number  ",
      "startColumn": 16,
      "startLine": 24,
      "startOffset": 2135,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 47,
      "endLine": 24,
      "endOffset": 2166,
      "image": "[boolean]",
      "startColumn": 39,
      "startLine": 24,
      "startOffset": 2158,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "mdat readme init --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 4,
      "endLine": 1,
      "endOffset": 3,
      "image": "mdat",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 11,
      "endLine": 1,
      "endOffset": 10,
      "image": "readme",
      "startColumn": 6,
      "startLine": 1,
      "startOffset": 5,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 16,
      "endLine": 1,
      "endOffset": 15,
      "image": "init",
      "startColumn": 13,
      "startLine": 1,
      "startOffset": 12,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 26,
      "endLine": 1,
      "endOffset": 25,
      "image": "[options]",
      "startColumn": 18,
      "startLine": 1,
      "startOffset": 17,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 84,
      "endLine": 3,
      "endOffset": 111,
      "image": "Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 28,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 9,
      "endLine": 5,
      "endOffset": 122,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 114,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 124,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 123,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 6,
      "endOffset": 126,
      "image": "-i",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 125,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 19,
      "endLine": 6,
      "endOffset": 141,
      "image": "--interactive",
      "startColumn": 7,
      "startLine": 6,
      "startOffset": 129,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 134,
      "endLine": 6,
      "endOffset": 256,
      "image": "  Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt.  ",
      "startColumn": 20,
      "startLine": 6,
      "startOffset": 142,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 143,
      "endLine": 6,
      "endOffset": 265,
      "image": "[boolean]",
      "startColumn": 135,
      "startLine": 6,
      "startOffset": 257,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 159,
      "endLine": 6,
      "endOffset": 281,
      "image": "[default: true]",
      "startColumn": 145,
      "startLine": 6,
      "startOffset": 267,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 7,
      "endOffset": 288,
      "image": "      ",
      "startColumn": 1,
      "startLine": 7,
      "startOffset": 283,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 17,
      "endLine": 7,
      "endOffset": 299,
      "image": "--overwrite",
      "startColumn": 7,
      "startLine": 7,
      "startOffset": 289,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 71,
      "endLine": 7,
      "endOffset": 353,
      "image": "  Replace an existing readme file if one is found.  ",
      "startColumn": 20,
      "startLine": 7,
      "startOffset": 302,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 80,
      "endLine": 7,
      "endOffset": 362,
      "image": "[boolean]",
      "startColumn": 72,
      "startLine": 7,
      "startOffset": 354,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 148,
      "endLine": 7,
      "endOffset": 430,
      "image": "[default: \`false\`, if an existing readme is found, don't touch it.]",
      "startColumn": 82,
      "startLine": 7,
      "startOffset": 364,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 8,
      "endOffset": 433,
      "image": "  ",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 432,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 8,
      "endOffset": 435,
      "image": "-o",
      "startColumn": 3,
      "startLine": 8,
      "startOffset": 434,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 8,
      "endOffset": 445,
      "image": "--output",
      "startColumn": 7,
      "startLine": 8,
      "startOffset": 438,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 45,
      "endLine": 8,
      "endOffset": 476,
      "image": "  Output file directory.  ",
      "startColumn": 20,
      "startLine": 8,
      "startOffset": 451,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 53,
      "endLine": 8,
      "endOffset": 484,
      "image": "[string]",
      "startColumn": 46,
      "startLine": 8,
      "startOffset": 477,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 94,
      "endLine": 8,
      "endOffset": 525,
      "image": "[default: Same directory as input file.]",
      "startColumn": 55,
      "startLine": 8,
      "startOffset": 486,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 9,
      "endOffset": 528,
      "image": "  ",
      "startColumn": 1,
      "startLine": 9,
      "startOffset": 527,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 9,
      "endOffset": 530,
      "image": "-e",
      "startColumn": 3,
      "startLine": 9,
      "startOffset": 529,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 9,
      "endOffset": 540,
      "image": "--expand",
      "startColumn": 7,
      "startLine": 9,
      "startOffset": 533,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 102,
      "endLine": 9,
      "endOffset": 628,
      "image": "  Automatically run \`mdat readme\` immediately after creating the readme template.  ",
      "startColumn": 20,
      "startLine": 9,
      "startOffset": 546,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 111,
      "endLine": 9,
      "endOffset": 637,
      "image": "[boolean]",
      "startColumn": 103,
      "startLine": 9,
      "startOffset": 629,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 127,
      "endLine": 9,
      "endOffset": 653,
      "image": "[default: true]",
      "startColumn": 113,
      "startLine": 9,
      "startOffset": 639,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 10,
      "endOffset": 656,
      "image": "  ",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 655,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 10,
      "endOffset": 658,
      "image": "-t",
      "startColumn": 3,
      "startLine": 10,
      "startOffset": 657,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 16,
      "endLine": 10,
      "endOffset": 670,
      "image": "--template",
      "startColumn": 7,
      "startLine": 10,
      "startOffset": 661,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 68,
      "endLine": 10,
      "endOffset": 722,
      "image": "  Specify a template to use for the new readme.  ",
      "startColumn": 20,
      "startLine": 10,
      "startOffset": 674,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 76,
      "endLine": 10,
      "endOffset": 730,
      "image": "[string]",
      "startColumn": 69,
      "startLine": 10,
      "startOffset": 723,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 150,
      "endLine": 10,
      "endOffset": 804,
      "image": "[choices: "Mdat Readme", "Standard Readme Basic", "Standard Readme Full"]",
      "startColumn": 78,
      "startLine": 10,
      "startOffset": 732,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[choices:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "choices",
        "tokenTypeIdx": 12,
      },
      "tokenTypeIdx": 12,
    },
    {
      "endColumn": 175,
      "endLine": 10,
      "endOffset": 829,
      "image": "[default: "Mdat Readme"]",
      "startColumn": 152,
      "startLine": 10,
      "startOffset": 806,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 11,
      "endOffset": 832,
      "image": "  ",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 831,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 11,
      "endOffset": 834,
      "image": "-c",
      "startColumn": 3,
      "startLine": 11,
      "startOffset": 833,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 16,
      "endLine": 11,
      "endOffset": 846,
      "image": "--compound",
      "startColumn": 7,
      "startLine": 11,
      "startOffset": 837,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 350,
      "endLine": 11,
      "endOffset": 1180,
      "image": "  Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical.  ",
      "startColumn": 20,
      "startLine": 11,
      "startOffset": 850,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 359,
      "endLine": 11,
      "endOffset": 1189,
      "image": "[boolean]",
      "startColumn": 351,
      "startLine": 11,
      "startOffset": 1181,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 375,
      "endLine": 11,
      "endOffset": 1205,
      "image": "[default: true]",
      "startColumn": 361,
      "startLine": 11,
      "startOffset": 1191,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 12,
      "endOffset": 1212,
      "image": "      ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 1207,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 12,
      "endOffset": 1221,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 1213,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 148,
      "endLine": 12,
      "endOffset": 1354,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.  ",
      "startColumn": 20,
      "startLine": 12,
      "startOffset": 1226,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 157,
      "endLine": 12,
      "endOffset": 1363,
      "image": "[boolean]",
      "startColumn": 149,
      "startLine": 12,
      "startOffset": 1355,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 13,
      "endOffset": 1366,
      "image": "  ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 1365,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 13,
      "endOffset": 1368,
      "image": "-h",
      "startColumn": 3,
      "startLine": 13,
      "startOffset": 1367,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 13,
      "endOffset": 1376,
      "image": "--help",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 1371,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 32,
      "endLine": 13,
      "endOffset": 1396,
      "image": "  Show help  ",
      "startColumn": 20,
      "startLine": 13,
      "startOffset": 1384,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 41,
      "endLine": 13,
      "endOffset": 1405,
      "image": "[boolean]",
      "startColumn": 33,
      "startLine": 13,
      "startOffset": 1397,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 14,
      "endOffset": 1408,
      "image": "  ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 1407,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 14,
      "endOffset": 1410,
      "image": "-v",
      "startColumn": 3,
      "startLine": 14,
      "startOffset": 1409,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 14,
      "endOffset": 1421,
      "image": "--version",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 1413,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 42,
      "endLine": 14,
      "endOffset": 1448,
      "image": "  Show version number  ",
      "startColumn": 20,
      "startLine": 14,
      "startOffset": 1426,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 51,
      "endLine": 14,
      "endOffset": 1457,
      "image": "[boolean]",
      "startColumn": 43,
      "startLine": 14,
      "startOffset": 1449,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "mdat-readme --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 11,
      "endLine": 1,
      "endOffset": 10,
      "image": "mdat-readme",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 21,
      "endLine": 1,
      "endOffset": 20,
      "image": "[options]",
      "startColumn": 13,
      "startLine": 1,
      "startOffset": 12,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 29,
      "endLine": 3,
      "endOffset": 51,
      "image": "Expand description goes here.",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 23,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 10,
      "endLine": 5,
      "endOffset": 63,
      "image": "Commands:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 54,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Commands:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startCommandsSection",
        "tokenTypeIdx": 19,
      },
      "tokenTypeIdx": 19,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 65,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 64,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 6,
      "endOffset": 76,
      "image": "mdat-readme",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 66,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 23,
      "endLine": 6,
      "endOffset": 86,
      "image": "[command]",
      "startColumn": 15,
      "startLine": 6,
      "startOffset": 78,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 33,
      "endLine": 6,
      "endOffset": 96,
      "image": "[options]",
      "startColumn": 25,
      "startLine": 6,
      "startOffset": 88,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 140,
      "endLine": 6,
      "endOffset": 203,
      "image": "  Expand mdat comment placeholders in your readme with a collection of helpful built-in expansion rules.",
      "startColumn": 37,
      "startLine": 6,
      "startOffset": 100,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 2,
      "endLine": 7,
      "endOffset": 206,
      "image": "  ",
      "startColumn": 1,
      "startLine": 7,
      "startOffset": 205,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 7,
      "endOffset": 217,
      "image": "mdat-readme",
      "startColumn": 3,
      "startLine": 7,
      "startOffset": 207,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 20,
      "endLine": 7,
      "endOffset": 224,
      "image": "expand",
      "startColumn": 15,
      "startLine": 7,
      "startOffset": 219,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 30,
      "endLine": 7,
      "endOffset": 234,
      "image": "[options]",
      "startColumn": 22,
      "startLine": 7,
      "startOffset": 226,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 69,
      "endLine": 7,
      "endOffset": 273,
      "image": "  Expand description goes here.  ",
      "startColumn": 37,
      "startLine": 7,
      "startOffset": 241,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 78,
      "endLine": 7,
      "endOffset": 282,
      "image": "[default]",
      "startColumn": 70,
      "startLine": 7,
      "startOffset": 274,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfo",
        "tokenTypeIdx": 9,
      },
      "tokenTypeIdx": 9,
    },
    {
      "endColumn": 2,
      "endLine": 8,
      "endOffset": 285,
      "image": "  ",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 284,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 8,
      "endOffset": 296,
      "image": "mdat-readme",
      "startColumn": 3,
      "startLine": 8,
      "startOffset": 286,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 18,
      "endLine": 8,
      "endOffset": 301,
      "image": "init",
      "startColumn": 15,
      "startLine": 8,
      "startOffset": 298,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 28,
      "endLine": 8,
      "endOffset": 311,
      "image": "[options]",
      "startColumn": 20,
      "startLine": 8,
      "startOffset": 303,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 122,
      "endLine": 8,
      "endOffset": 405,
      "image": "  Interactively Create a new readme.md file with sensible \`mdat\` comment placeholders.",
      "startColumn": 37,
      "startLine": 8,
      "startOffset": 320,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 9,
      "endLine": 10,
      "endOffset": 416,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 408,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 6,
      "endLine": 11,
      "endOffset": 422,
      "image": "      ",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 417,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 19,
      "endLine": 11,
      "endOffset": 435,
      "image": "--readme-file",
      "startColumn": 7,
      "startLine": 11,
      "startOffset": 423,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 58,
      "endLine": 11,
      "endOffset": 474,
      "image": "  Path to the readme file to expand.  ",
      "startColumn": 21,
      "startLine": 11,
      "startOffset": 437,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 66,
      "endLine": 11,
      "endOffset": 482,
      "image": "[string]",
      "startColumn": 59,
      "startLine": 11,
      "startOffset": 475,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 121,
      "endLine": 11,
      "endOffset": 537,
      "image": "[default: The closest readme file is used by default.]",
      "startColumn": 68,
      "startLine": 11,
      "startOffset": 484,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 12,
      "endOffset": 544,
      "image": "      ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 539,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 20,
      "endLine": 12,
      "endOffset": 558,
      "image": "--package-file",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 545,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 84,
      "endLine": 12,
      "endOffset": 622,
      "image": "  Path to the package.json file to use to populate the readme.  ",
      "startColumn": 21,
      "startLine": 12,
      "startOffset": 559,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 92,
      "endLine": 12,
      "endOffset": 630,
      "image": "[string]",
      "startColumn": 85,
      "startLine": 12,
      "startOffset": 623,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 153,
      "endLine": 12,
      "endOffset": 691,
      "image": "[default: The closest package.json file is used by default.]",
      "startColumn": 94,
      "startLine": 12,
      "startOffset": 632,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 13,
      "endOffset": 698,
      "image": "      ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 693,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 13,
      "endOffset": 706,
      "image": "--config",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 699,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 65,
      "endLine": 13,
      "endOffset": 757,
      "image": "  Path(s) to files containing mdat configs.  ",
      "startColumn": 21,
      "startLine": 13,
      "startOffset": 713,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 72,
      "endLine": 13,
      "endOffset": 764,
      "image": "[array]",
      "startColumn": 66,
      "startLine": 13,
      "startOffset": 758,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 161,
      "endLine": 13,
      "endOffset": 853,
      "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
      "startColumn": 74,
      "startLine": 13,
      "startOffset": 766,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 14,
      "endOffset": 856,
      "image": "  ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 855,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 14,
      "endOffset": 858,
      "image": "-r",
      "startColumn": 3,
      "startLine": 14,
      "startOffset": 857,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 14,
      "endOffset": 867,
      "image": "--rules",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 861,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 92,
      "endLine": 14,
      "endOffset": 946,
      "image": "  Path(s) to files containing additional mdat comment expansion rules.  ",
      "startColumn": 21,
      "startLine": 14,
      "startOffset": 875,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 99,
      "endLine": 14,
      "endOffset": 953,
      "image": "[array]",
      "startColumn": 93,
      "startLine": 14,
      "startOffset": 947,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 15,
      "endOffset": 956,
      "image": "  ",
      "startColumn": 1,
      "startLine": 15,
      "startOffset": 955,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 15,
      "endOffset": 958,
      "image": "-o",
      "startColumn": 3,
      "startLine": 15,
      "startOffset": 957,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 15,
      "endOffset": 968,
      "image": "--output",
      "startColumn": 7,
      "startLine": 15,
      "startOffset": 961,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 46,
      "endLine": 15,
      "endOffset": 1000,
      "image": "  Output file directory.  ",
      "startColumn": 21,
      "startLine": 15,
      "startOffset": 975,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 54,
      "endLine": 15,
      "endOffset": 1008,
      "image": "[string]",
      "startColumn": 47,
      "startLine": 15,
      "startOffset": 1001,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 154,
      "endLine": 15,
      "endOffset": 1108,
      "image": "[default: Same directory as your readme file. Writes rule expansions directly to your readme file.]",
      "startColumn": 56,
      "startLine": 15,
      "startOffset": 1010,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 16,
      "endOffset": 1111,
      "image": "  ",
      "startColumn": 1,
      "startLine": 16,
      "startOffset": 1110,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 16,
      "endOffset": 1113,
      "image": "-n",
      "startColumn": 3,
      "startLine": 16,
      "startOffset": 1112,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 16,
      "endOffset": 1121,
      "image": "--name",
      "startColumn": 7,
      "startLine": 16,
      "startOffset": 1116,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 41,
      "endLine": 16,
      "endOffset": 1150,
      "image": "  Output file name.  ",
      "startColumn": 21,
      "startLine": 16,
      "startOffset": 1130,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 49,
      "endLine": 16,
      "endOffset": 1158,
      "image": "[string]",
      "startColumn": 42,
      "startLine": 16,
      "startOffset": 1151,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 127,
      "endLine": 16,
      "endOffset": 1236,
      "image": "[default: Same directory as input file. Writes directly to your readme file.]",
      "startColumn": 51,
      "startLine": 16,
      "startOffset": 1160,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 17,
      "endOffset": 1243,
      "image": "      ",
      "startColumn": 1,
      "startLine": 17,
      "startOffset": 1238,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 13,
      "endLine": 17,
      "endOffset": 1250,
      "image": "--print",
      "startColumn": 7,
      "startLine": 17,
      "startOffset": 1244,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 131,
      "endLine": 17,
      "endOffset": 1368,
      "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
      "startColumn": 21,
      "startLine": 17,
      "startOffset": 1258,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 140,
      "endLine": 17,
      "endOffset": 1377,
      "image": "[boolean]",
      "startColumn": 132,
      "startLine": 17,
      "startOffset": 1369,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 157,
      "endLine": 17,
      "endOffset": 1394,
      "image": "[default: false]",
      "startColumn": 142,
      "startLine": 17,
      "startOffset": 1379,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 18,
      "endOffset": 1401,
      "image": "      ",
      "startColumn": 1,
      "startLine": 18,
      "startOffset": 1396,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 18,
      "endOffset": 1409,
      "image": "--prefix",
      "startColumn": 7,
      "startLine": 18,
      "startOffset": 1402,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 227,
      "endLine": 18,
      "endOffset": 1622,
      "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
      "startColumn": 21,
      "startLine": 18,
      "startOffset": 1416,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 235,
      "endLine": 18,
      "endOffset": 1630,
      "image": "[string]",
      "startColumn": 228,
      "startLine": 18,
      "startOffset": 1623,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 19,
      "endOffset": 1633,
      "image": "  ",
      "startColumn": 1,
      "startLine": 19,
      "startOffset": 1632,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 19,
      "endOffset": 1635,
      "image": "-m",
      "startColumn": 3,
      "startLine": 19,
      "startOffset": 1634,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 19,
      "endOffset": 1643,
      "image": "--meta",
      "startColumn": 7,
      "startLine": 19,
      "startOffset": 1638,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 204,
      "endLine": 19,
      "endOffset": 1835,
      "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
      "startColumn": 21,
      "startLine": 19,
      "startOffset": 1652,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 213,
      "endLine": 19,
      "endOffset": 1844,
      "image": "[boolean]",
      "startColumn": 205,
      "startLine": 19,
      "startOffset": 1836,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 229,
      "endLine": 19,
      "endOffset": 1860,
      "image": "[default: true]",
      "startColumn": 215,
      "startLine": 19,
      "startOffset": 1846,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 20,
      "endOffset": 1863,
      "image": "  ",
      "startColumn": 1,
      "startLine": 20,
      "startOffset": 1862,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 20,
      "endOffset": 1865,
      "image": "-c",
      "startColumn": 3,
      "startLine": 20,
      "startOffset": 1864,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 20,
      "endOffset": 1874,
      "image": "--check",
      "startColumn": 7,
      "startLine": 20,
      "startOffset": 1868,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 177,
      "endLine": 20,
      "endOffset": 2038,
      "image": "  Check your readme for rule violations without expanding comments. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
      "startColumn": 21,
      "startLine": 20,
      "startOffset": 1882,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 186,
      "endLine": 20,
      "endOffset": 2047,
      "image": "[boolean]",
      "startColumn": 178,
      "startLine": 20,
      "startOffset": 2039,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 203,
      "endLine": 20,
      "endOffset": 2064,
      "image": "[default: false]",
      "startColumn": 188,
      "startLine": 20,
      "startOffset": 2049,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 21,
      "endOffset": 2071,
      "image": "      ",
      "startColumn": 1,
      "startLine": 21,
      "startOffset": 2066,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 21,
      "endOffset": 2080,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 21,
      "startOffset": 2072,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 151,
      "endLine": 21,
      "endOffset": 2216,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
      "startColumn": 21,
      "startLine": 21,
      "startOffset": 2086,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 160,
      "endLine": 21,
      "endOffset": 2225,
      "image": "[boolean]",
      "startColumn": 152,
      "startLine": 21,
      "startOffset": 2217,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 177,
      "endLine": 21,
      "endOffset": 2242,
      "image": "[default: false]",
      "startColumn": 162,
      "startLine": 21,
      "startOffset": 2227,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 22,
      "endOffset": 2245,
      "image": "  ",
      "startColumn": 1,
      "startLine": 22,
      "startOffset": 2244,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 22,
      "endOffset": 2247,
      "image": "-h",
      "startColumn": 3,
      "startLine": 22,
      "startOffset": 2246,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 22,
      "endOffset": 2255,
      "image": "--help",
      "startColumn": 7,
      "startLine": 22,
      "startOffset": 2250,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 33,
      "endLine": 22,
      "endOffset": 2276,
      "image": "  Show help  ",
      "startColumn": 21,
      "startLine": 22,
      "startOffset": 2264,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 42,
      "endLine": 22,
      "endOffset": 2285,
      "image": "[boolean]",
      "startColumn": 34,
      "startLine": 22,
      "startOffset": 2277,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 23,
      "endOffset": 2288,
      "image": "  ",
      "startColumn": 1,
      "startLine": 23,
      "startOffset": 2287,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 23,
      "endOffset": 2290,
      "image": "-v",
      "startColumn": 3,
      "startLine": 23,
      "startOffset": 2289,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 23,
      "endOffset": 2301,
      "image": "--version",
      "startColumn": 7,
      "startLine": 23,
      "startOffset": 2293,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 43,
      "endLine": 23,
      "endOffset": 2329,
      "image": "  Show version number  ",
      "startColumn": 21,
      "startLine": 23,
      "startOffset": 2307,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 52,
      "endLine": 23,
      "endOffset": 2338,
      "image": "[boolean]",
      "startColumn": 44,
      "startLine": 23,
      "startOffset": 2330,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "tldraw-cli --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 10,
      "endLine": 1,
      "endOffset": 9,
      "image": "tldraw-cli",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 20,
      "endLine": 1,
      "endOffset": 19,
      "image": "<command>",
      "startColumn": 12,
      "startLine": 1,
      "startOffset": 11,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 21,
      "endLine": 3,
      "endOffset": 42,
      "image": "CLI tools for tldraw.",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 22,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 10,
      "endLine": 5,
      "endOffset": 54,
      "image": "Commands:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 45,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Commands:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startCommandsSection",
        "tokenTypeIdx": 19,
      },
      "tokenTypeIdx": 19,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 56,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 55,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 12,
      "endLine": 6,
      "endOffset": 66,
      "image": "tldraw-cli",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 57,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 22,
      "endLine": 6,
      "endOffset": 76,
      "image": "<command>",
      "startColumn": 14,
      "startLine": 6,
      "startOffset": 68,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 60,
      "endLine": 6,
      "endOffset": 114,
      "image": "  CLI tools for tldraw.  ",
      "startColumn": 36,
      "startLine": 6,
      "startOffset": 90,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 69,
      "endLine": 6,
      "endOffset": 123,
      "image": "[default]",
      "startColumn": 61,
      "startLine": 6,
      "startOffset": 115,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfo",
        "tokenTypeIdx": 9,
      },
      "tokenTypeIdx": 9,
    },
    {
      "endColumn": 2,
      "endLine": 7,
      "endOffset": 126,
      "image": "  ",
      "startColumn": 1,
      "startLine": 7,
      "startOffset": 125,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 12,
      "endLine": 7,
      "endOffset": 136,
      "image": "tldraw-cli",
      "startColumn": 3,
      "startLine": 7,
      "startOffset": 127,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 19,
      "endLine": 7,
      "endOffset": 143,
      "image": "export",
      "startColumn": 14,
      "startLine": 7,
      "startOffset": 138,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 34,
      "endLine": 7,
      "endOffset": 158,
      "image": "<files|urls..>",
      "startColumn": 21,
      "startLine": 7,
      "startOffset": 145,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 191,
      "endLine": 7,
      "endOffset": 315,
      "image": "  Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
      "startColumn": 36,
      "startLine": 7,
      "startOffset": 160,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 2,
      "endLine": 8,
      "endOffset": 318,
      "image": "  ",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 317,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 12,
      "endLine": 8,
      "endOffset": 328,
      "image": "tldraw-cli",
      "startColumn": 3,
      "startLine": 8,
      "startOffset": 319,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 17,
      "endLine": 8,
      "endOffset": 333,
      "image": "open",
      "startColumn": 14,
      "startLine": 8,
      "startOffset": 330,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 35,
      "endLine": 8,
      "endOffset": 351,
      "image": "[files-or-urls..]",
      "startColumn": 19,
      "startLine": 8,
      "startOffset": 335,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 371,
      "endLine": 8,
      "endOffset": 687,
      "image": "  Open a tldraw \`.tldr\` file or tldraw.com URL your default browser. Uses a locally-hosted instance of tldraw. Call \`open\` without an argument to open a blank sketch. Sketches opened via URL are temporarily copied to the local system, and will not be kept in sync with tldraw.com. This process does not exit until the browser is closed.",
      "startColumn": 36,
      "startLine": 8,
      "startOffset": 352,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescriptionTerminal",
        "tokenTypeIdx": 22,
      },
      "tokenTypeIdx": 22,
    },
    {
      "endColumn": 9,
      "endLine": 10,
      "endOffset": 698,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 690,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 2,
      "endLine": 11,
      "endOffset": 700,
      "image": "  ",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 699,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 11,
      "endOffset": 702,
      "image": "-h",
      "startColumn": 3,
      "startLine": 11,
      "startOffset": 701,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 11,
      "endOffset": 710,
      "image": "--help",
      "startColumn": 7,
      "startLine": 11,
      "startOffset": 705,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 28,
      "endLine": 11,
      "endOffset": 726,
      "image": "  Show help  ",
      "startColumn": 16,
      "startLine": 11,
      "startOffset": 714,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 37,
      "endLine": 11,
      "endOffset": 735,
      "image": "[boolean]",
      "startColumn": 29,
      "startLine": 11,
      "startOffset": 727,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 12,
      "endOffset": 738,
      "image": "  ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 737,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 12,
      "endOffset": 740,
      "image": "-v",
      "startColumn": 3,
      "startLine": 12,
      "startOffset": 739,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 12,
      "endOffset": 751,
      "image": "--version",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 743,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 38,
      "endLine": 12,
      "endOffset": 774,
      "image": "  Show version number  ",
      "startColumn": 16,
      "startLine": 12,
      "startOffset": 752,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 47,
      "endLine": 12,
      "endOffset": 783,
      "image": "[boolean]",
      "startColumn": 39,
      "startLine": 12,
      "startOffset": 775,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help lexing > should lex "tldraw-cli export --help" to a valid token vector 1`] = `
{
  "errors": [],
  "groups": {},
  "tokens": [
    {
      "endColumn": 10,
      "endLine": 1,
      "endOffset": 9,
      "image": "tldraw-cli",
      "startColumn": 1,
      "startLine": 1,
      "startOffset": 0,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 17,
      "endLine": 1,
      "endOffset": 16,
      "image": "export",
      "startColumn": 12,
      "startLine": 1,
      "startOffset": 11,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\S\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "word",
        "tokenTypeIdx": 6,
      },
      "tokenTypeIdx": 6,
    },
    {
      "endColumn": 32,
      "endLine": 1,
      "endOffset": 31,
      "image": "<files|urls..>",
      "startColumn": 19,
      "startLine": 1,
      "startOffset": 18,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 154,
      "endLine": 3,
      "endOffset": 187,
      "image": "Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
      "startColumn": 1,
      "startLine": 3,
      "startOffset": 34,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\.\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "programDescription",
        "tokenTypeIdx": 15,
      },
      "tokenTypeIdx": 15,
    },
    {
      "endColumn": 13,
      "endLine": 5,
      "endOffset": 202,
      "image": "Positionals:
",
      "startColumn": 1,
      "startLine": 5,
      "startOffset": 190,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Positionals:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startPositionalsSection",
        "tokenTypeIdx": 18,
      },
      "tokenTypeIdx": 18,
    },
    {
      "endColumn": 2,
      "endLine": 6,
      "endOffset": 204,
      "image": "  ",
      "startColumn": 1,
      "startLine": 6,
      "startOffset": 203,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 16,
      "endLine": 6,
      "endOffset": 218,
      "image": "<files|urls..>",
      "startColumn": 3,
      "startLine": 6,
      "startOffset": 205,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "argument",
        "tokenTypeIdx": 7,
      },
      "tokenTypeIdx": 7,
    },
    {
      "endColumn": 276,
      "endLine": 6,
      "endOffset": 478,
      "image": "  The tldraw sketch to export. May be one or more paths to local \`.tldr\` files, or tldraw.com sketch URLs. Accepts a mix of both file paths and URLs, and supports glob matching via your shell. Prints the absolute path(s) to the exported image(s) to \`stdout\`.  ",
      "startColumn": 17,
      "startLine": 6,
      "startOffset": 219,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 284,
      "endLine": 6,
      "endOffset": 486,
      "image": "[string]",
      "startColumn": 277,
      "startLine": 6,
      "startOffset": 479,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 9,
      "endLine": 8,
      "endOffset": 497,
      "image": "Options:
",
      "startColumn": 1,
      "startLine": 8,
      "startOffset": 489,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /Options:\\\\n/,
        "PUSH_MODE": "SECTION_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startOptionsSection",
        "tokenTypeIdx": 17,
      },
      "tokenTypeIdx": 17,
    },
    {
      "endColumn": 2,
      "endLine": 9,
      "endOffset": 499,
      "image": "  ",
      "startColumn": 1,
      "startLine": 9,
      "startOffset": 498,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 9,
      "endOffset": 501,
      "image": "-f",
      "startColumn": 3,
      "startLine": 9,
      "startOffset": 500,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 9,
      "endOffset": 511,
      "image": "--format",
      "startColumn": 7,
      "startLine": 9,
      "startOffset": 504,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 43,
      "endLine": 9,
      "endOffset": 540,
      "image": "  Output image format.  ",
      "startColumn": 20,
      "startLine": 9,
      "startOffset": 517,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 51,
      "endLine": 9,
      "endOffset": 548,
      "image": "[string]",
      "startColumn": 44,
      "startLine": 9,
      "startOffset": 541,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 91,
      "endLine": 9,
      "endOffset": 588,
      "image": "[choices: "png", "svg", "json", "tldr"]",
      "startColumn": 53,
      "startLine": 9,
      "startOffset": 550,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[choices:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "choices",
        "tokenTypeIdx": 12,
      },
      "tokenTypeIdx": 12,
    },
    {
      "endColumn": 108,
      "endLine": 9,
      "endOffset": 605,
      "image": "[default: "svg"]",
      "startColumn": 93,
      "startLine": 9,
      "startOffset": 590,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 10,
      "endOffset": 608,
      "image": "  ",
      "startColumn": 1,
      "startLine": 10,
      "startOffset": 607,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 10,
      "endOffset": 610,
      "image": "-o",
      "startColumn": 3,
      "startLine": 10,
      "startOffset": 609,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 14,
      "endLine": 10,
      "endOffset": 620,
      "image": "--output",
      "startColumn": 7,
      "startLine": 10,
      "startOffset": 613,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 46,
      "endLine": 10,
      "endOffset": 652,
      "image": "  Output image directory.  ",
      "startColumn": 20,
      "startLine": 10,
      "startOffset": 626,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 54,
      "endLine": 10,
      "endOffset": 660,
      "image": "[string]",
      "startColumn": 47,
      "startLine": 10,
      "startOffset": 653,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 70,
      "endLine": 10,
      "endOffset": 676,
      "image": "[default: "./"]",
      "startColumn": 56,
      "startLine": 10,
      "startOffset": 662,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 11,
      "endOffset": 679,
      "image": "  ",
      "startColumn": 1,
      "startLine": 11,
      "startOffset": 678,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 11,
      "endOffset": 681,
      "image": "-n",
      "startColumn": 3,
      "startLine": 11,
      "startOffset": 680,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 11,
      "endOffset": 689,
      "image": "--name",
      "startColumn": 7,
      "startLine": 11,
      "startOffset": 684,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 61,
      "endLine": 11,
      "endOffset": 738,
      "image": "  Output image name (without extension).  ",
      "startColumn": 20,
      "startLine": 11,
      "startOffset": 697,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 69,
      "endLine": 11,
      "endOffset": 746,
      "image": "[string]",
      "startColumn": 62,
      "startLine": 11,
      "startOffset": 739,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 122,
      "endLine": 11,
      "endOffset": 799,
      "image": "[default: The original file name or URL id is used.]",
      "startColumn": 71,
      "startLine": 11,
      "startOffset": 748,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 12,
      "endOffset": 806,
      "image": "      ",
      "startColumn": 1,
      "startLine": 12,
      "startOffset": 801,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 14,
      "endLine": 12,
      "endOffset": 814,
      "image": "--frames",
      "startColumn": 7,
      "startLine": 12,
      "startOffset": 807,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 177,
      "endLine": 12,
      "endOffset": 977,
      "image": "  Export each sketch "frame" as a separate image. Pass one or more frame names or IDs to export specific frames, or skip the arguments to export all frames.  ",
      "startColumn": 20,
      "startLine": 12,
      "startOffset": 820,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 184,
      "endLine": 12,
      "endOffset": 984,
      "image": "[array]",
      "startColumn": 178,
      "startLine": 12,
      "startOffset": 978,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 201,
      "endLine": 12,
      "endOffset": 1001,
      "image": "[default: false]",
      "startColumn": 186,
      "startLine": 12,
      "startOffset": 986,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 13,
      "endOffset": 1004,
      "image": "  ",
      "startColumn": 1,
      "startLine": 13,
      "startOffset": 1003,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 13,
      "endOffset": 1006,
      "image": "-t",
      "startColumn": 3,
      "startLine": 13,
      "startOffset": 1005,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 19,
      "endLine": 13,
      "endOffset": 1021,
      "image": "--transparent",
      "startColumn": 7,
      "startLine": 13,
      "startOffset": 1009,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 69,
      "endLine": 13,
      "endOffset": 1071,
      "image": "  Export an image with a transparent background.  ",
      "startColumn": 20,
      "startLine": 13,
      "startOffset": 1022,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 78,
      "endLine": 13,
      "endOffset": 1080,
      "image": "[boolean]",
      "startColumn": 70,
      "startLine": 13,
      "startOffset": 1072,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 95,
      "endLine": 13,
      "endOffset": 1097,
      "image": "[default: false]",
      "startColumn": 80,
      "startLine": 13,
      "startOffset": 1082,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 14,
      "endOffset": 1100,
      "image": "  ",
      "startColumn": 1,
      "startLine": 14,
      "startOffset": 1099,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 14,
      "endOffset": 1102,
      "image": "-d",
      "startColumn": 3,
      "startLine": 14,
      "startOffset": 1101,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 17,
      "endLine": 14,
      "endOffset": 1115,
      "image": "--dark-mode",
      "startColumn": 7,
      "startLine": 14,
      "startOffset": 1105,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 64,
      "endLine": 14,
      "endOffset": 1162,
      "image": "  Export a dark theme version of the image.  ",
      "startColumn": 20,
      "startLine": 14,
      "startOffset": 1118,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 73,
      "endLine": 14,
      "endOffset": 1171,
      "image": "[boolean]",
      "startColumn": 65,
      "startLine": 14,
      "startOffset": 1163,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 90,
      "endLine": 14,
      "endOffset": 1188,
      "image": "[default: false]",
      "startColumn": 75,
      "startLine": 14,
      "startOffset": 1173,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 15,
      "endOffset": 1195,
      "image": "      ",
      "startColumn": 1,
      "startLine": 15,
      "startOffset": 1190,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 19,
      "endLine": 15,
      "endOffset": 1208,
      "image": "--strip-style",
      "startColumn": 7,
      "startLine": 15,
      "startOffset": 1196,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 185,
      "endLine": 15,
      "endOffset": 1374,
      "image": "  Remove \`<style>\` elements from SVG output, useful to lighten the load of embedded fonts if you intend to provide your own stylesheets. Applies to SVG output only.  ",
      "startColumn": 20,
      "startLine": 15,
      "startOffset": 1209,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 194,
      "endLine": 15,
      "endOffset": 1383,
      "image": "[boolean]",
      "startColumn": 186,
      "startLine": 15,
      "startOffset": 1375,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 211,
      "endLine": 15,
      "endOffset": 1400,
      "image": "[default: false]",
      "startColumn": 196,
      "startLine": 15,
      "startOffset": 1385,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 16,
      "endOffset": 1403,
      "image": "  ",
      "startColumn": 1,
      "startLine": 16,
      "startOffset": 1402,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 16,
      "endOffset": 1405,
      "image": "-p",
      "startColumn": 3,
      "startLine": 16,
      "startOffset": 1404,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 13,
      "endLine": 16,
      "endOffset": 1414,
      "image": "--print",
      "startColumn": 7,
      "startLine": 16,
      "startOffset": 1408,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 188,
      "endLine": 16,
      "endOffset": 1589,
      "image": "  Print the exported image(s) to stdout instead of saving to a file. Incompatible with \`--output\`, and disregards \`--name\`. PNGs are printed as base64-encoded strings.  ",
      "startColumn": 20,
      "startLine": 16,
      "startOffset": 1421,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 197,
      "endLine": 16,
      "endOffset": 1598,
      "image": "[boolean]",
      "startColumn": 189,
      "startLine": 16,
      "startOffset": 1590,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 214,
      "endLine": 16,
      "endOffset": 1615,
      "image": "[default: false]",
      "startColumn": 199,
      "startLine": 16,
      "startOffset": 1600,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 6,
      "endLine": 17,
      "endOffset": 1622,
      "image": "      ",
      "startColumn": 1,
      "startLine": 17,
      "startOffset": 1617,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 15,
      "endLine": 17,
      "endOffset": 1631,
      "image": "--verbose",
      "startColumn": 7,
      "startLine": 17,
      "startOffset": 1623,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 150,
      "endLine": 17,
      "endOffset": 1766,
      "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
      "startColumn": 20,
      "startLine": 17,
      "startOffset": 1636,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 159,
      "endLine": 17,
      "endOffset": 1775,
      "image": "[boolean]",
      "startColumn": 151,
      "startLine": 17,
      "startOffset": 1767,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 176,
      "endLine": 17,
      "endOffset": 1792,
      "image": "[default: false]",
      "startColumn": 161,
      "startLine": 17,
      "startOffset": 1777,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "defaultInfoDescription",
        "tokenTypeIdx": 11,
      },
      "tokenTypeIdx": 11,
    },
    {
      "endColumn": 2,
      "endLine": 18,
      "endOffset": 1795,
      "image": "  ",
      "startColumn": 1,
      "startLine": 18,
      "startOffset": 1794,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 18,
      "endOffset": 1797,
      "image": "-h",
      "startColumn": 3,
      "startLine": 18,
      "startOffset": 1796,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 12,
      "endLine": 18,
      "endOffset": 1805,
      "image": "--help",
      "startColumn": 7,
      "startLine": 18,
      "startOffset": 1800,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 32,
      "endLine": 18,
      "endOffset": 1825,
      "image": "  Show help  ",
      "startColumn": 20,
      "startLine": 18,
      "startOffset": 1813,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 41,
      "endLine": 18,
      "endOffset": 1834,
      "image": "[boolean]",
      "startColumn": 33,
      "startLine": 18,
      "startOffset": 1826,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
    {
      "endColumn": 2,
      "endLine": 19,
      "endOffset": 1837,
      "image": "  ",
      "startColumn": 1,
      "startLine": 19,
      "startOffset": 1836,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2,\\}/,
        "PUSH_MODE": "ROW_MODE",
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "startRow",
        "tokenTypeIdx": 20,
      },
      "tokenTypeIdx": 20,
    },
    {
      "endColumn": 4,
      "endLine": 19,
      "endOffset": 1839,
      "image": "-v",
      "startColumn": 3,
      "startLine": 19,
      "startOffset": 1838,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /-\\[A-Za-z\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "alias",
        "tokenTypeIdx": 4,
      },
      "tokenTypeIdx": 4,
    },
    {
      "endColumn": 15,
      "endLine": 19,
      "endOffset": 1850,
      "image": "--version",
      "startColumn": 7,
      "startLine": 19,
      "startOffset": 1842,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /--\\[\\\\w-_\\]\\+/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "flag",
        "tokenTypeIdx": 3,
      },
      "tokenTypeIdx": 3,
    },
    {
      "endColumn": 42,
      "endLine": 19,
      "endOffset": 1877,
      "image": "  Show version number  ",
      "startColumn": 20,
      "startLine": 19,
      "startOffset": 1855,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "rowDescription",
        "tokenTypeIdx": 21,
      },
      "tokenTypeIdx": 21,
    },
    {
      "endColumn": 51,
      "endLine": 19,
      "endOffset": 1886,
      "image": "[boolean]",
      "startColumn": 43,
      "startLine": 19,
      "startOffset": 1878,
      "tokenType": {
        "CATEGORIES": [],
        "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
        "categoryMatches": [],
        "categoryMatchesMap": {},
        "isParent": false,
        "name": "type",
        "tokenTypeIdx": 8,
      },
      "tokenTypeIdx": 8,
    },
  ],
}
`;

exports[`cli help object to markdown > should parse and transform "mdat --help" to valid markdown 1`] = `
"#### Subcommand: \`mdat undefined\`

description goes here

Usage:

\`\`\`txt
mdat undefined <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to expand. _(Optional.)_ | \`string\` |


| Command | Argument | Description |
| --- | --- | --- |
| \`\` | \`[command]\` \`[options]\` | Note: \`expand\` is the default and only command at the moment. |
| \`expand\` | \`<files..>\` \`[options]\` | description goes here _(Default command.)_ |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing mdat comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--print\` |  | Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` | \`false\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` | \`false\` |
| \`--check\` | \`-c\` | Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering. | \`boolean\` | \`false\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection. | \`boolean\` | \`false\` |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help object to markdown > should parse and transform "mdat expand --help" to valid markdown 1`] = `
"#### Subcommand: \`mdat expand\`

description goes here

Usage:

\`\`\`txt
mdat expand <files..> [options]
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`files\` | Markdown file(s) with \`mdat\` placeholder comments to expand. _(Required.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing mdat comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--print\` |  | Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` | \`false\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` | \`false\` |
| \`--check\` | \`-c\` | Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering. | \`boolean\` | \`false\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection. | \`boolean\` | \`false\` |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help object to markdown > should parse and transform "mdat readme --help" to valid markdown 1`] = `
"#### Subcommand: \`mdat readme\`

Work with \`mdat\` comments in your readme.md.

Usage:

\`\`\`txt
mdat readme [command] [options]
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`readme expand\` | \`[options]\` | Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules. _(Default command.)_ |
| \`readme check\` | \`[options]\` | Validate \`mdat\` placeholder comments in your readme.md. |
| \`readme clean\` | \`[options]\` | Collapse \`mdat\` placeholder comments in your readme.md. |
| \`readme init\` | \`[options]\` | Interactively create a new readme.md file with sensible \`mdat\` comment placeholders. |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing \`mdat\` comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same name as input file. Overwrites the input file. |
| \`--readme\` |  | Path to the readme.md file to expand. | \`string\` | The closest readme.md file is used by default. |
| \`--package\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--assets\` |  | Path to find and save readme-related assets. | \`string\` | \`./assets\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` |  |
| \`--print\` |  | Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` |  |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help object to markdown > should parse and transform "mdat readme init --help" to valid markdown 1`] = `
"#### Subcommand: \`mdat readme init\`

Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.

Usage:

\`\`\`txt
mdat readme init [options]
\`\`\`

| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--interactive\` | \`-i\` | Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt. | \`boolean\` | \`true\` |
| \`--overwrite\` |  | Replace an existing readme file if one is found. | \`boolean\` | \`false\`, if an existing readme is found, don't touch it. |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as input file. |
| \`--expand\` | \`-e\` | Automatically run \`mdat readme\` immediately after creating the readme template. | \`boolean\` | \`true\` |
| \`--template\` | \`-t\` | Specify a template to use for the new readme. | \`string\` | "Mdat Readme" |
| \`--compound\` | \`-c\` | Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical. | \`boolean\` | \`true\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection. | \`boolean\` |  |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help object to markdown > should parse and transform "mdat-readme --help" to valid markdown 1`] = `
"#### Subcommand: \`mdat-readme undefined\`

Expand description goes here.

Usage:

\`\`\`txt
mdat-readme undefined [options]
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`\` | \`[command]\` \`[options]\` | Expand mdat comment placeholders in your readme with a collection of helpful built-in expansion rules. |
| \`expand\` | \`[options]\` | Expand description goes here. _(Default command.)_ |
| \`init\` | \`[options]\` | Interactively Create a new readme.md file with sensible \`mdat\` comment placeholders. |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--readme-file\` |  | Path to the readme file to expand. | \`string\` | The closest readme file is used by default. |
| \`--package-file\` |  | Path to the package.json file to use to populate the readme. | \`string\` | The closest package.json file is used by default. |
| \`--config\` |  | Path(s) to files containing mdat configs. | \`array\` | Configuration is loaded if found from the usual places, or defaults are used. |
| \`--rules\` | \`-r\` | Path(s) to files containing additional mdat comment expansion rules. | \`array\` |  |
| \`--output\` | \`-o\` | Output file directory. | \`string\` | Same directory as your readme file. Writes rule expansions directly to your readme file. |
| \`--name\` | \`-n\` | Output file name. | \`string\` | Same directory as input file. Writes directly to your readme file. |
| \`--print\` |  | Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options. | \`boolean\` | \`false\` |
| \`--prefix\` |  | Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety. | \`string\` |  |
| \`--meta\` | \`-m\` | Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically. | \`boolean\` | \`true\` |
| \`--check\` | \`-c\` | Check your readme for rule violations without expanding comments. Identifies things like missing comment placeholders and incorrect placeholder ordering. | \`boolean\` | \`false\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection. | \`boolean\` | \`false\` |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help object to markdown > should parse and transform "tldraw-cli --help" to valid markdown 1`] = `
"#### Subcommand: \`tldraw-cli undefined\`

CLI tools for tldraw.

Usage:

\`\`\`txt
tldraw-cli undefined <command>
\`\`\`

| Command | Argument | Description |
| --- | --- | --- |
| \`[default]\` | \`<command>\` | CLI tools for tldraw. _(Default command.)_ |
| \`export\` | \`<files|urls..>\` | Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout. |
| \`open\` | \`[files-or-urls..]\` | Open a tldraw \`.tldr\` file or tldraw.com URL your default browser. Uses a locally-hosted instance of tldraw. Call \`open\` without an argument to open a blank sketch. Sketches opened via URL are temporarily copied to the local system, and will not be kept in sync with tldraw.com. This process does not exit until the browser is closed. |


| Option | Alias | Description | Type |
| --- | --- | --- | --- |
| \`--help\` | \`-h\` | Show help | \`boolean\` |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |
"
`;

exports[`cli help object to markdown > should parse and transform "tldraw-cli export --help" to valid markdown 1`] = `
"#### Subcommand: \`tldraw-cli export\`

Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.

Usage:

\`\`\`txt
tldraw-cli export <files|urls..>
\`\`\`

| Positional Argument | Description | Type |
| --- | --- | --- |
| \`<files|urls..>\` | The tldraw sketch to export. May be one or more paths to local \`.tldr\` files, or tldraw.com sketch URLs. Accepts a mix of both file paths and URLs, and supports glob matching via your shell. Prints the absolute path(s) to the exported image(s) to \`stdout\`. _(Optional.)_ | \`string\` |


| Option | Alias | Description | Type | Default |
| --- | --- | --- | --- | --- |
| \`--format\` | \`-f\` | Output image format. | \`string\` | \`"svg"\` |
| \`--output\` | \`-o\` | Output image directory. | \`string\` | \`"./"\` |
| \`--name\` | \`-n\` | Output image name (without extension). | \`string\` | The original file name or URL id is used. |
| \`--frames\` |  | Export each sketch "frame" as a separate image. Pass one or more frame names or IDs to export specific frames, or skip the arguments to export all frames. | \`array\` | \`false\` |
| \`--transparent\` | \`-t\` | Export an image with a transparent background. | \`boolean\` | \`false\` |
| \`--dark-mode\` | \`-d\` | Export a dark theme version of the image. | \`boolean\` | \`false\` |
| \`--strip-style\` |  | Remove \`<style>\` elements from SVG output, useful to lighten the load of embedded fonts if you intend to provide your own stylesheets. Applies to SVG output only. | \`boolean\` | \`false\` |
| \`--print\` | \`-p\` | Print the exported image(s) to stdout instead of saving to a file. Incompatible with \`--output\`, and disregards \`--name\`. PNGs are printed as base64-encoded strings. | \`boolean\` | \`false\` |
| \`--verbose\` |  | Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection. | \`boolean\` | \`false\` |
| \`--help\` | \`-h\` | Show help | \`boolean\` |  |
| \`--version\` | \`-v\` | Show version number | \`boolean\` |  |
"
`;

exports[`cli help parsing > should parse "mdat --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 14,
        "endLine": 1,
        "endOffset": 13,
        "image": "<files..>",
        "startColumn": 6,
        "startLine": 1,
        "startOffset": 5,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
      {
        "endColumn": 24,
        "endLine": 1,
        "endOffset": 23,
        "image": "[options]",
        "startColumn": 16,
        "startLine": 1,
        "startOffset": 15,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 4,
        "endLine": 1,
        "endOffset": 3,
        "image": "mdat",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "commandsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 16,
                    "endLine": 6,
                    "endOffset": 74,
                    "image": "[command]",
                    "startColumn": 8,
                    "startLine": 6,
                    "startOffset": 66,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                  {
                    "endColumn": 26,
                    "endLine": 6,
                    "endOffset": 84,
                    "image": "[options]",
                    "startColumn": 18,
                    "startLine": 6,
                    "startOffset": 76,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "description": [
                  {
                    "endColumn": 96,
                    "endLine": 6,
                    "endOffset": 154,
                    "image": "  Note: \`expand\` is the default and only command at the moment.",
                    "startColumn": 34,
                    "startLine": 6,
                    "startOffset": 92,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 6,
                    "endOffset": 64,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 61,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 60,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 59,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 23,
                    "endLine": 7,
                    "endOffset": 178,
                    "image": "<files..>",
                    "startColumn": 15,
                    "startLine": 7,
                    "startOffset": 170,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                  {
                    "endColumn": 33,
                    "endLine": 7,
                    "endOffset": 188,
                    "image": "[options]",
                    "startColumn": 25,
                    "startLine": 7,
                    "startOffset": 180,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 13,
                    "endLine": 7,
                    "endOffset": 168,
                    "image": "expand",
                    "startColumn": 8,
                    "startLine": 7,
                    "startOffset": 163,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "defaultInfo": [
                  {
                    "endColumn": 67,
                    "endLine": 7,
                    "endOffset": 222,
                    "image": "[default]",
                    "startColumn": 59,
                    "startLine": 7,
                    "startOffset": 214,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfo",
                      "tokenTypeIdx": 9,
                    },
                    "tokenTypeIdx": 9,
                  },
                ],
                "description": [
                  {
                    "endColumn": 58,
                    "endLine": 7,
                    "endOffset": 213,
                    "image": "  description goes here  ",
                    "startColumn": 34,
                    "startLine": 7,
                    "startOffset": 189,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 7,
                    "endOffset": 161,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 7,
                    "startOffset": 158,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 7,
                    "endOffset": 157,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 7,
                    "startOffset": 156,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startCommandsSection": [
            {
              "endColumn": 10,
              "endLine": 5,
              "endOffset": 58,
              "image": "Commands:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 49,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Commands:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startCommandsSection",
                "tokenTypeIdx": 19,
              },
              "tokenTypeIdx": 19,
            },
          ],
        },
        "name": "commandsSection",
      },
    ],
    "description": [
      {
        "endColumn": 21,
        "endLine": 3,
        "endOffset": 46,
        "image": "description goes here",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 26,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 156,
                    "endLine": 13,
                    "endOffset": 483,
                    "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
                    "startColumn": 69,
                    "startLine": 13,
                    "startOffset": 396,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 60,
                    "endLine": 13,
                    "endOffset": 387,
                    "image": "  Path(s) to files containing mdat configs.  ",
                    "startColumn": 16,
                    "startLine": 13,
                    "startOffset": 343,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 13,
                    "endOffset": 341,
                    "image": "--config",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 334,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 13,
                    "endOffset": 333,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 328,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 67,
                    "endLine": 13,
                    "endOffset": 394,
                    "image": "[array]",
                    "startColumn": 61,
                    "startLine": 13,
                    "startOffset": 388,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 14,
                    "endOffset": 488,
                    "image": "-r",
                    "startColumn": 3,
                    "startLine": 14,
                    "startOffset": 487,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 76,
                    "endLine": 14,
                    "endOffset": 560,
                    "image": "  Path(s) to files containing mdat comment expansion rules.  ",
                    "startColumn": 16,
                    "startLine": 14,
                    "startOffset": 500,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 14,
                    "endOffset": 497,
                    "image": "--rules",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 491,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 14,
                    "endOffset": 486,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 485,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 83,
                    "endLine": 14,
                    "endOffset": 567,
                    "image": "[array]",
                    "startColumn": 77,
                    "startLine": 14,
                    "startOffset": 561,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 15,
                    "endOffset": 572,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 15,
                    "startOffset": 571,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 90,
                    "endLine": 15,
                    "endOffset": 658,
                    "image": "[default: Same directory as input file.]",
                    "startColumn": 51,
                    "startLine": 15,
                    "startOffset": 619,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 41,
                    "endLine": 15,
                    "endOffset": 609,
                    "image": "  Output file directory.  ",
                    "startColumn": 16,
                    "startLine": 15,
                    "startOffset": 584,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 15,
                    "endOffset": 582,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 15,
                    "startOffset": 575,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 15,
                    "endOffset": 570,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 15,
                    "startOffset": 569,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 49,
                    "endLine": 15,
                    "endOffset": 617,
                    "image": "[string]",
                    "startColumn": 42,
                    "startLine": 15,
                    "startOffset": 610,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 16,
                    "endOffset": 663,
                    "image": "-n",
                    "startColumn": 3,
                    "startLine": 16,
                    "startOffset": 662,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 107,
                    "endLine": 16,
                    "endOffset": 766,
                    "image": "[default: Same name as input file. Overwrites the input file.]",
                    "startColumn": 46,
                    "startLine": 16,
                    "startOffset": 705,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 36,
                    "endLine": 16,
                    "endOffset": 695,
                    "image": "  Output file name.  ",
                    "startColumn": 16,
                    "startLine": 16,
                    "startOffset": 675,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 16,
                    "endOffset": 671,
                    "image": "--name",
                    "startColumn": 7,
                    "startLine": 16,
                    "startOffset": 666,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 16,
                    "endOffset": 661,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 16,
                    "startOffset": 660,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 44,
                    "endLine": 16,
                    "endOffset": 703,
                    "image": "[string]",
                    "startColumn": 37,
                    "startLine": 16,
                    "startOffset": 696,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 152,
                    "endLine": 17,
                    "endOffset": 919,
                    "image": "[default: false]",
                    "startColumn": 137,
                    "startLine": 17,
                    "startOffset": 904,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 126,
                    "endLine": 17,
                    "endOffset": 893,
                    "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
                    "startColumn": 16,
                    "startLine": 17,
                    "startOffset": 783,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 17,
                    "endOffset": 780,
                    "image": "--print",
                    "startColumn": 7,
                    "startLine": 17,
                    "startOffset": 774,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 17,
                    "endOffset": 773,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 17,
                    "startOffset": 768,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 135,
                    "endLine": 17,
                    "endOffset": 902,
                    "image": "[boolean]",
                    "startColumn": 127,
                    "startLine": 17,
                    "startOffset": 894,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 222,
                    "endLine": 18,
                    "endOffset": 1142,
                    "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
                    "startColumn": 16,
                    "startLine": 18,
                    "startOffset": 936,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 18,
                    "endOffset": 934,
                    "image": "--prefix",
                    "startColumn": 7,
                    "startLine": 18,
                    "startOffset": 927,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 18,
                    "endOffset": 926,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 18,
                    "startOffset": 921,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 230,
                    "endLine": 18,
                    "endOffset": 1150,
                    "image": "[string]",
                    "startColumn": 223,
                    "startLine": 18,
                    "startOffset": 1143,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 19,
                    "endOffset": 1155,
                    "image": "-m",
                    "startColumn": 3,
                    "startLine": 19,
                    "startOffset": 1154,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 225,
                    "endLine": 19,
                    "endOffset": 1376,
                    "image": "[default: false]",
                    "startColumn": 210,
                    "startLine": 19,
                    "startOffset": 1361,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 199,
                    "endLine": 19,
                    "endOffset": 1350,
                    "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
                    "startColumn": 16,
                    "startLine": 19,
                    "startOffset": 1167,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 19,
                    "endOffset": 1163,
                    "image": "--meta",
                    "startColumn": 7,
                    "startLine": 19,
                    "startOffset": 1158,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 19,
                    "endOffset": 1153,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 19,
                    "startOffset": 1152,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 208,
                    "endLine": 19,
                    "endOffset": 1359,
                    "image": "[boolean]",
                    "startColumn": 200,
                    "startLine": 19,
                    "startOffset": 1351,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 20,
                    "endOffset": 1381,
                    "image": "-c",
                    "startColumn": 3,
                    "startLine": 20,
                    "startOffset": 1380,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 198,
                    "endLine": 20,
                    "endOffset": 1575,
                    "image": "[default: false]",
                    "startColumn": 183,
                    "startLine": 20,
                    "startOffset": 1560,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 172,
                    "endLine": 20,
                    "endOffset": 1549,
                    "image": "  Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
                    "startColumn": 16,
                    "startLine": 20,
                    "startOffset": 1393,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 20,
                    "endOffset": 1390,
                    "image": "--check",
                    "startColumn": 7,
                    "startLine": 20,
                    "startOffset": 1384,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 20,
                    "endOffset": 1379,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 20,
                    "startOffset": 1378,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 181,
                    "endLine": 20,
                    "endOffset": 1558,
                    "image": "[boolean]",
                    "startColumn": 173,
                    "startLine": 20,
                    "startOffset": 1550,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 172,
                    "endLine": 21,
                    "endOffset": 1748,
                    "image": "[default: false]",
                    "startColumn": 157,
                    "startLine": 21,
                    "startOffset": 1733,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 146,
                    "endLine": 21,
                    "endOffset": 1722,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
                    "startColumn": 16,
                    "startLine": 21,
                    "startOffset": 1592,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 21,
                    "endOffset": 1591,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 21,
                    "startOffset": 1583,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 21,
                    "endOffset": 1582,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 21,
                    "startOffset": 1577,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 155,
                    "endLine": 21,
                    "endOffset": 1731,
                    "image": "[boolean]",
                    "startColumn": 147,
                    "startLine": 21,
                    "startOffset": 1723,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 22,
                    "endOffset": 1753,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 22,
                    "startOffset": 1752,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 28,
                    "endLine": 22,
                    "endOffset": 1777,
                    "image": "  Show help  ",
                    "startColumn": 16,
                    "startLine": 22,
                    "startOffset": 1765,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 22,
                    "endOffset": 1761,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 22,
                    "startOffset": 1756,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 22,
                    "endOffset": 1751,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 22,
                    "startOffset": 1750,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 37,
                    "endLine": 22,
                    "endOffset": 1786,
                    "image": "[boolean]",
                    "startColumn": 29,
                    "startLine": 22,
                    "startOffset": 1778,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 23,
                    "endOffset": 1791,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 23,
                    "startOffset": 1790,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 38,
                    "endLine": 23,
                    "endOffset": 1825,
                    "image": "  Show version number  ",
                    "startColumn": 16,
                    "startLine": 23,
                    "startOffset": 1803,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 23,
                    "endOffset": 1802,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 23,
                    "startOffset": 1794,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 23,
                    "endOffset": 1789,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 23,
                    "startOffset": 1788,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 47,
                    "endLine": 23,
                    "endOffset": 1834,
                    "image": "[boolean]",
                    "startColumn": 39,
                    "startLine": 23,
                    "startOffset": 1826,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 12,
              "endOffset": 327,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 12,
              "startOffset": 319,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
    "positionalsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "description": [
                  {
                    "endColumn": 71,
                    "endLine": 10,
                    "endOffset": 308,
                    "image": "  Markdown file(s) with \`mdat\` placeholder comments to expand.  ",
                    "startColumn": 8,
                    "startLine": 10,
                    "startOffset": 245,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 7,
                    "endLine": 10,
                    "endOffset": 244,
                    "image": "files",
                    "startColumn": 3,
                    "startLine": 10,
                    "startOffset": 240,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 10,
                    "endOffset": 239,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 10,
                    "startOffset": 238,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 79,
                    "endLine": 10,
                    "endOffset": 316,
                    "image": "[string]",
                    "startColumn": 72,
                    "startLine": 10,
                    "startOffset": 309,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startPositionalsSection": [
            {
              "endColumn": 13,
              "endLine": 9,
              "endOffset": 237,
              "image": "Positionals:
",
              "startColumn": 1,
              "startLine": 9,
              "startOffset": 225,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Positionals:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startPositionalsSection",
                "tokenTypeIdx": 18,
              },
              "tokenTypeIdx": 18,
            },
          ],
        },
        "name": "positionalsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "mdat expand --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 21,
        "endLine": 1,
        "endOffset": 20,
        "image": "<files..>",
        "startColumn": 13,
        "startLine": 1,
        "startOffset": 12,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
      {
        "endColumn": 31,
        "endLine": 1,
        "endOffset": 30,
        "image": "[options]",
        "startColumn": 23,
        "startLine": 1,
        "startOffset": 22,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 4,
        "endLine": 1,
        "endOffset": 3,
        "image": "mdat",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
      {
        "endColumn": 11,
        "endLine": 1,
        "endOffset": 10,
        "image": "expand",
        "startColumn": 6,
        "startLine": 1,
        "startOffset": 5,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "description": [
      {
        "endColumn": 21,
        "endLine": 3,
        "endOffset": 53,
        "image": "description goes here",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 33,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 156,
                    "endLine": 9,
                    "endOffset": 325,
                    "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
                    "startColumn": 69,
                    "startLine": 9,
                    "startOffset": 238,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 60,
                    "endLine": 9,
                    "endOffset": 229,
                    "image": "  Path(s) to files containing mdat configs.  ",
                    "startColumn": 16,
                    "startLine": 9,
                    "startOffset": 185,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 9,
                    "endOffset": 183,
                    "image": "--config",
                    "startColumn": 7,
                    "startLine": 9,
                    "startOffset": 176,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 9,
                    "endOffset": 175,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 9,
                    "startOffset": 170,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 67,
                    "endLine": 9,
                    "endOffset": 236,
                    "image": "[array]",
                    "startColumn": 61,
                    "startLine": 9,
                    "startOffset": 230,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 10,
                    "endOffset": 330,
                    "image": "-r",
                    "startColumn": 3,
                    "startLine": 10,
                    "startOffset": 329,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 76,
                    "endLine": 10,
                    "endOffset": 402,
                    "image": "  Path(s) to files containing mdat comment expansion rules.  ",
                    "startColumn": 16,
                    "startLine": 10,
                    "startOffset": 342,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 10,
                    "endOffset": 339,
                    "image": "--rules",
                    "startColumn": 7,
                    "startLine": 10,
                    "startOffset": 333,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 10,
                    "endOffset": 328,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 10,
                    "startOffset": 327,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 83,
                    "endLine": 10,
                    "endOffset": 409,
                    "image": "[array]",
                    "startColumn": 77,
                    "startLine": 10,
                    "startOffset": 403,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 11,
                    "endOffset": 414,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 11,
                    "startOffset": 413,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 90,
                    "endLine": 11,
                    "endOffset": 500,
                    "image": "[default: Same directory as input file.]",
                    "startColumn": 51,
                    "startLine": 11,
                    "startOffset": 461,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 41,
                    "endLine": 11,
                    "endOffset": 451,
                    "image": "  Output file directory.  ",
                    "startColumn": 16,
                    "startLine": 11,
                    "startOffset": 426,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 11,
                    "endOffset": 424,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 11,
                    "startOffset": 417,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 11,
                    "endOffset": 412,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 11,
                    "startOffset": 411,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 49,
                    "endLine": 11,
                    "endOffset": 459,
                    "image": "[string]",
                    "startColumn": 42,
                    "startLine": 11,
                    "startOffset": 452,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 12,
                    "endOffset": 505,
                    "image": "-n",
                    "startColumn": 3,
                    "startLine": 12,
                    "startOffset": 504,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 107,
                    "endLine": 12,
                    "endOffset": 608,
                    "image": "[default: Same name as input file. Overwrites the input file.]",
                    "startColumn": 46,
                    "startLine": 12,
                    "startOffset": 547,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 36,
                    "endLine": 12,
                    "endOffset": 537,
                    "image": "  Output file name.  ",
                    "startColumn": 16,
                    "startLine": 12,
                    "startOffset": 517,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 12,
                    "endOffset": 513,
                    "image": "--name",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 508,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 12,
                    "endOffset": 503,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 502,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 44,
                    "endLine": 12,
                    "endOffset": 545,
                    "image": "[string]",
                    "startColumn": 37,
                    "startLine": 12,
                    "startOffset": 538,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 152,
                    "endLine": 13,
                    "endOffset": 761,
                    "image": "[default: false]",
                    "startColumn": 137,
                    "startLine": 13,
                    "startOffset": 746,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 126,
                    "endLine": 13,
                    "endOffset": 735,
                    "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
                    "startColumn": 16,
                    "startLine": 13,
                    "startOffset": 625,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 13,
                    "endOffset": 622,
                    "image": "--print",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 616,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 13,
                    "endOffset": 615,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 610,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 135,
                    "endLine": 13,
                    "endOffset": 744,
                    "image": "[boolean]",
                    "startColumn": 127,
                    "startLine": 13,
                    "startOffset": 736,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 222,
                    "endLine": 14,
                    "endOffset": 984,
                    "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
                    "startColumn": 16,
                    "startLine": 14,
                    "startOffset": 778,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 14,
                    "endOffset": 776,
                    "image": "--prefix",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 769,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 14,
                    "endOffset": 768,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 763,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 230,
                    "endLine": 14,
                    "endOffset": 992,
                    "image": "[string]",
                    "startColumn": 223,
                    "startLine": 14,
                    "startOffset": 985,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 15,
                    "endOffset": 997,
                    "image": "-m",
                    "startColumn": 3,
                    "startLine": 15,
                    "startOffset": 996,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 225,
                    "endLine": 15,
                    "endOffset": 1218,
                    "image": "[default: false]",
                    "startColumn": 210,
                    "startLine": 15,
                    "startOffset": 1203,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 199,
                    "endLine": 15,
                    "endOffset": 1192,
                    "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
                    "startColumn": 16,
                    "startLine": 15,
                    "startOffset": 1009,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 15,
                    "endOffset": 1005,
                    "image": "--meta",
                    "startColumn": 7,
                    "startLine": 15,
                    "startOffset": 1000,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 15,
                    "endOffset": 995,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 15,
                    "startOffset": 994,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 208,
                    "endLine": 15,
                    "endOffset": 1201,
                    "image": "[boolean]",
                    "startColumn": 200,
                    "startLine": 15,
                    "startOffset": 1193,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 16,
                    "endOffset": 1223,
                    "image": "-c",
                    "startColumn": 3,
                    "startLine": 16,
                    "startOffset": 1222,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 198,
                    "endLine": 16,
                    "endOffset": 1417,
                    "image": "[default: false]",
                    "startColumn": 183,
                    "startLine": 16,
                    "startOffset": 1402,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 172,
                    "endLine": 16,
                    "endOffset": 1391,
                    "image": "  Check the input files for rule violations without expanding them. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
                    "startColumn": 16,
                    "startLine": 16,
                    "startOffset": 1235,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 16,
                    "endOffset": 1232,
                    "image": "--check",
                    "startColumn": 7,
                    "startLine": 16,
                    "startOffset": 1226,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 16,
                    "endOffset": 1221,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 16,
                    "startOffset": 1220,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 181,
                    "endLine": 16,
                    "endOffset": 1400,
                    "image": "[boolean]",
                    "startColumn": 173,
                    "startLine": 16,
                    "startOffset": 1392,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 172,
                    "endLine": 17,
                    "endOffset": 1590,
                    "image": "[default: false]",
                    "startColumn": 157,
                    "startLine": 17,
                    "startOffset": 1575,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 146,
                    "endLine": 17,
                    "endOffset": 1564,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
                    "startColumn": 16,
                    "startLine": 17,
                    "startOffset": 1434,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 17,
                    "endOffset": 1433,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 17,
                    "startOffset": 1425,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 17,
                    "endOffset": 1424,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 17,
                    "startOffset": 1419,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 155,
                    "endLine": 17,
                    "endOffset": 1573,
                    "image": "[boolean]",
                    "startColumn": 147,
                    "startLine": 17,
                    "startOffset": 1565,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 18,
                    "endOffset": 1595,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 18,
                    "startOffset": 1594,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 28,
                    "endLine": 18,
                    "endOffset": 1619,
                    "image": "  Show help  ",
                    "startColumn": 16,
                    "startLine": 18,
                    "startOffset": 1607,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 18,
                    "endOffset": 1603,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 18,
                    "startOffset": 1598,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 18,
                    "endOffset": 1593,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 18,
                    "startOffset": 1592,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 37,
                    "endLine": 18,
                    "endOffset": 1628,
                    "image": "[boolean]",
                    "startColumn": 29,
                    "startLine": 18,
                    "startOffset": 1620,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 19,
                    "endOffset": 1633,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 19,
                    "startOffset": 1632,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 38,
                    "endLine": 19,
                    "endOffset": 1667,
                    "image": "  Show version number  ",
                    "startColumn": 16,
                    "startLine": 19,
                    "startOffset": 1645,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 19,
                    "endOffset": 1644,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 19,
                    "startOffset": 1636,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 19,
                    "endOffset": 1631,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 19,
                    "startOffset": 1630,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 47,
                    "endLine": 19,
                    "endOffset": 1676,
                    "image": "[boolean]",
                    "startColumn": 39,
                    "startLine": 19,
                    "startOffset": 1668,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 8,
              "endOffset": 169,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 8,
              "startOffset": 161,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
    "positionalsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "description": [
                  {
                    "endColumn": 71,
                    "endLine": 6,
                    "endOffset": 139,
                    "image": "  Markdown file(s) with \`mdat\` placeholder comments to expand.  ",
                    "startColumn": 8,
                    "startLine": 6,
                    "startOffset": 76,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 7,
                    "endLine": 6,
                    "endOffset": 75,
                    "image": "files",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 71,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "required": [
                  {
                    "endColumn": 90,
                    "endLine": 6,
                    "endOffset": 158,
                    "image": "[required]",
                    "startColumn": 81,
                    "startLine": 6,
                    "startOffset": 149,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[required\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "required",
                      "tokenTypeIdx": 10,
                    },
                    "tokenTypeIdx": 10,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 70,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 69,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 79,
                    "endLine": 6,
                    "endOffset": 147,
                    "image": "[string]",
                    "startColumn": 72,
                    "startLine": 6,
                    "startOffset": 140,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startPositionalsSection": [
            {
              "endColumn": 13,
              "endLine": 5,
              "endOffset": 68,
              "image": "Positionals:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 56,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Positionals:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startPositionalsSection",
                "tokenTypeIdx": 18,
              },
              "tokenTypeIdx": 18,
            },
          ],
        },
        "name": "positionalsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "mdat readme --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 21,
        "endLine": 1,
        "endOffset": 20,
        "image": "[command]",
        "startColumn": 13,
        "startLine": 1,
        "startOffset": 12,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
      {
        "endColumn": 31,
        "endLine": 1,
        "endOffset": 30,
        "image": "[options]",
        "startColumn": 23,
        "startLine": 1,
        "startOffset": 22,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 4,
        "endLine": 1,
        "endOffset": 3,
        "image": "mdat",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
      {
        "endColumn": 11,
        "endLine": 1,
        "endOffset": 10,
        "image": "readme",
        "startColumn": 6,
        "startLine": 1,
        "startOffset": 5,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "commandsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 30,
                    "endLine": 6,
                    "endOffset": 118,
                    "image": "[options]",
                    "startColumn": 22,
                    "startLine": 6,
                    "startOffset": 110,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 13,
                    "endLine": 6,
                    "endOffset": 101,
                    "image": "readme",
                    "startColumn": 8,
                    "startLine": 6,
                    "startOffset": 96,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                  {
                    "endColumn": 20,
                    "endLine": 6,
                    "endOffset": 108,
                    "image": "expand",
                    "startColumn": 15,
                    "startLine": 6,
                    "startOffset": 103,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "defaultInfo": [
                  {
                    "endColumn": 151,
                    "endLine": 6,
                    "endOffset": 239,
                    "image": "[default]",
                    "startColumn": 143,
                    "startLine": 6,
                    "startOffset": 231,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfo",
                      "tokenTypeIdx": 9,
                    },
                    "tokenTypeIdx": 9,
                  },
                ],
                "description": [
                  {
                    "endColumn": 142,
                    "endLine": 6,
                    "endOffset": 230,
                    "image": "  Expand \`mdat\` comment placeholders in your readme.md using a collection of helpful built-in expansion rules.  ",
                    "startColumn": 31,
                    "startLine": 6,
                    "startOffset": 119,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 6,
                    "endOffset": 94,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 91,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 90,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 89,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 29,
                    "endLine": 7,
                    "endOffset": 269,
                    "image": "[options]",
                    "startColumn": 21,
                    "startLine": 7,
                    "startOffset": 261,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 13,
                    "endLine": 7,
                    "endOffset": 253,
                    "image": "readme",
                    "startColumn": 8,
                    "startLine": 7,
                    "startOffset": 248,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                  {
                    "endColumn": 19,
                    "endLine": 7,
                    "endOffset": 259,
                    "image": "check",
                    "startColumn": 15,
                    "startLine": 7,
                    "startOffset": 255,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 87,
                    "endLine": 7,
                    "endOffset": 327,
                    "image": "  Validate \`mdat\` placeholder comments in your readme.md.",
                    "startColumn": 31,
                    "startLine": 7,
                    "startOffset": 271,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 7,
                    "endOffset": 246,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 7,
                    "startOffset": 243,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 7,
                    "endOffset": 242,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 7,
                    "startOffset": 241,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 29,
                    "endLine": 8,
                    "endOffset": 357,
                    "image": "[options]",
                    "startColumn": 21,
                    "startLine": 8,
                    "startOffset": 349,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 13,
                    "endLine": 8,
                    "endOffset": 341,
                    "image": "readme",
                    "startColumn": 8,
                    "startLine": 8,
                    "startOffset": 336,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                  {
                    "endColumn": 19,
                    "endLine": 8,
                    "endOffset": 347,
                    "image": "clean",
                    "startColumn": 15,
                    "startLine": 8,
                    "startOffset": 343,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 87,
                    "endLine": 8,
                    "endOffset": 415,
                    "image": "  Collapse \`mdat\` placeholder comments in your readme.md.",
                    "startColumn": 31,
                    "startLine": 8,
                    "startOffset": 359,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 8,
                    "endOffset": 334,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 8,
                    "startOffset": 331,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 8,
                    "endOffset": 330,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 8,
                    "startOffset": 329,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 28,
                    "endLine": 9,
                    "endOffset": 444,
                    "image": "[options]",
                    "startColumn": 20,
                    "startLine": 9,
                    "startOffset": 436,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 13,
                    "endLine": 9,
                    "endOffset": 429,
                    "image": "readme",
                    "startColumn": 8,
                    "startLine": 9,
                    "startOffset": 424,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                  {
                    "endColumn": 18,
                    "endLine": 9,
                    "endOffset": 434,
                    "image": "init",
                    "startColumn": 15,
                    "startLine": 9,
                    "startOffset": 431,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 116,
                    "endLine": 9,
                    "endOffset": 532,
                    "image": "  Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
                    "startColumn": 31,
                    "startLine": 9,
                    "startOffset": 447,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 6,
                    "endLine": 9,
                    "endOffset": 422,
                    "image": "mdat",
                    "startColumn": 3,
                    "startLine": 9,
                    "startOffset": 419,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 9,
                    "endOffset": 418,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 9,
                    "startOffset": 417,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startCommandsSection": [
            {
              "endColumn": 10,
              "endLine": 5,
              "endOffset": 88,
              "image": "Commands:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 79,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Commands:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startCommandsSection",
                "tokenTypeIdx": 19,
              },
              "tokenTypeIdx": 19,
            },
          ],
        },
        "name": "commandsSection",
      },
    ],
    "description": [
      {
        "endColumn": 44,
        "endLine": 3,
        "endOffset": 76,
        "image": "Work with \`mdat\` comments in your readme.md.",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 33,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 156,
                    "endLine": 12,
                    "endOffset": 699,
                    "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
                    "startColumn": 69,
                    "startLine": 12,
                    "startOffset": 612,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 60,
                    "endLine": 12,
                    "endOffset": 603,
                    "image": "  Path(s) to files containing mdat configs.  ",
                    "startColumn": 16,
                    "startLine": 12,
                    "startOffset": 559,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 12,
                    "endOffset": 557,
                    "image": "--config",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 550,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 12,
                    "endOffset": 549,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 544,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 67,
                    "endLine": 12,
                    "endOffset": 610,
                    "image": "[array]",
                    "startColumn": 61,
                    "startLine": 12,
                    "startOffset": 604,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 13,
                    "endOffset": 704,
                    "image": "-r",
                    "startColumn": 3,
                    "startLine": 13,
                    "startOffset": 703,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 78,
                    "endLine": 13,
                    "endOffset": 778,
                    "image": "  Path(s) to files containing \`mdat\` comment expansion rules.  ",
                    "startColumn": 16,
                    "startLine": 13,
                    "startOffset": 716,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 13,
                    "endOffset": 713,
                    "image": "--rules",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 707,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 13,
                    "endOffset": 702,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 701,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 85,
                    "endLine": 13,
                    "endOffset": 785,
                    "image": "[array]",
                    "startColumn": 79,
                    "startLine": 13,
                    "startOffset": 779,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 14,
                    "endOffset": 790,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 14,
                    "startOffset": 789,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 90,
                    "endLine": 14,
                    "endOffset": 876,
                    "image": "[default: Same directory as input file.]",
                    "startColumn": 51,
                    "startLine": 14,
                    "startOffset": 837,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 41,
                    "endLine": 14,
                    "endOffset": 827,
                    "image": "  Output file directory.  ",
                    "startColumn": 16,
                    "startLine": 14,
                    "startOffset": 802,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 14,
                    "endOffset": 800,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 793,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 14,
                    "endOffset": 788,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 787,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 49,
                    "endLine": 14,
                    "endOffset": 835,
                    "image": "[string]",
                    "startColumn": 42,
                    "startLine": 14,
                    "startOffset": 828,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 15,
                    "endOffset": 881,
                    "image": "-n",
                    "startColumn": 3,
                    "startLine": 15,
                    "startOffset": 880,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 107,
                    "endLine": 15,
                    "endOffset": 984,
                    "image": "[default: Same name as input file. Overwrites the input file.]",
                    "startColumn": 46,
                    "startLine": 15,
                    "startOffset": 923,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 36,
                    "endLine": 15,
                    "endOffset": 913,
                    "image": "  Output file name.  ",
                    "startColumn": 16,
                    "startLine": 15,
                    "startOffset": 893,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 15,
                    "endOffset": 889,
                    "image": "--name",
                    "startColumn": 7,
                    "startLine": 15,
                    "startOffset": 884,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 15,
                    "endOffset": 879,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 15,
                    "startOffset": 878,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 44,
                    "endLine": 15,
                    "endOffset": 921,
                    "image": "[string]",
                    "startColumn": 37,
                    "startLine": 15,
                    "startOffset": 914,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 122,
                    "endLine": 16,
                    "endOffset": 1107,
                    "image": "[default: The closest readme.md file is used by default.]",
                    "startColumn": 66,
                    "startLine": 16,
                    "startOffset": 1051,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 56,
                    "endLine": 16,
                    "endOffset": 1041,
                    "image": "  Path to the readme.md file to expand.  ",
                    "startColumn": 16,
                    "startLine": 16,
                    "startOffset": 1001,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 16,
                    "endOffset": 999,
                    "image": "--readme",
                    "startColumn": 7,
                    "startLine": 16,
                    "startOffset": 992,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 16,
                    "endOffset": 991,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 16,
                    "startOffset": 986,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 64,
                    "endLine": 16,
                    "endOffset": 1049,
                    "image": "[string]",
                    "startColumn": 57,
                    "startLine": 16,
                    "startOffset": 1042,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 148,
                    "endLine": 17,
                    "endOffset": 1256,
                    "image": "[default: The closest package.json file is used by default.]",
                    "startColumn": 89,
                    "startLine": 17,
                    "startOffset": 1197,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 79,
                    "endLine": 17,
                    "endOffset": 1187,
                    "image": "  Path to the package.json file to use to populate the readme.  ",
                    "startColumn": 16,
                    "startLine": 17,
                    "startOffset": 1124,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 17,
                    "endOffset": 1123,
                    "image": "--package",
                    "startColumn": 7,
                    "startLine": 17,
                    "startOffset": 1115,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 17,
                    "endOffset": 1114,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 17,
                    "startOffset": 1109,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 87,
                    "endLine": 17,
                    "endOffset": 1195,
                    "image": "[string]",
                    "startColumn": 80,
                    "startLine": 17,
                    "startOffset": 1188,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 91,
                    "endLine": 18,
                    "endOffset": 1348,
                    "image": "[default: ./assets]",
                    "startColumn": 73,
                    "startLine": 18,
                    "startOffset": 1330,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 63,
                    "endLine": 18,
                    "endOffset": 1320,
                    "image": "  Path to find and save readme-related assets.  ",
                    "startColumn": 16,
                    "startLine": 18,
                    "startOffset": 1273,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 18,
                    "endOffset": 1271,
                    "image": "--assets",
                    "startColumn": 7,
                    "startLine": 18,
                    "startOffset": 1264,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 18,
                    "endOffset": 1263,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 18,
                    "startOffset": 1258,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 71,
                    "endLine": 18,
                    "endOffset": 1328,
                    "image": "[string]",
                    "startColumn": 64,
                    "startLine": 18,
                    "startOffset": 1321,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 224,
                    "endLine": 19,
                    "endOffset": 1573,
                    "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-\`mdat\` comments in your Markdown file, or if you're willing to trade some verbosity for safety.  ",
                    "startColumn": 16,
                    "startLine": 19,
                    "startOffset": 1365,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 19,
                    "endOffset": 1363,
                    "image": "--prefix",
                    "startColumn": 7,
                    "startLine": 19,
                    "startOffset": 1356,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 19,
                    "endOffset": 1355,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 19,
                    "startOffset": 1350,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 232,
                    "endLine": 19,
                    "endOffset": 1581,
                    "image": "[string]",
                    "startColumn": 225,
                    "startLine": 19,
                    "startOffset": 1574,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 20,
                    "endOffset": 1586,
                    "image": "-m",
                    "startColumn": 3,
                    "startLine": 20,
                    "startOffset": 1585,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 199,
                    "endLine": 20,
                    "endOffset": 1781,
                    "image": "  Embed an extra comment at the top of the generated Markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
                    "startColumn": 16,
                    "startLine": 20,
                    "startOffset": 1598,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 20,
                    "endOffset": 1594,
                    "image": "--meta",
                    "startColumn": 7,
                    "startLine": 20,
                    "startOffset": 1589,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 20,
                    "endOffset": 1584,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 20,
                    "startOffset": 1583,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 208,
                    "endLine": 20,
                    "endOffset": 1790,
                    "image": "[boolean]",
                    "startColumn": 200,
                    "startLine": 20,
                    "startOffset": 1782,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 126,
                    "endLine": 21,
                    "endOffset": 1917,
                    "image": "  Print the expanded Markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
                    "startColumn": 16,
                    "startLine": 21,
                    "startOffset": 1807,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 21,
                    "endOffset": 1804,
                    "image": "--print",
                    "startColumn": 7,
                    "startLine": 21,
                    "startOffset": 1798,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 21,
                    "endOffset": 1797,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 21,
                    "startOffset": 1792,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 135,
                    "endLine": 21,
                    "endOffset": 1926,
                    "image": "[boolean]",
                    "startColumn": 127,
                    "startLine": 21,
                    "startOffset": 1918,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 144,
                    "endLine": 22,
                    "endOffset": 2071,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.  ",
                    "startColumn": 16,
                    "startLine": 22,
                    "startOffset": 1943,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 22,
                    "endOffset": 1942,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 22,
                    "startOffset": 1934,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 22,
                    "endOffset": 1933,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 22,
                    "startOffset": 1928,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 153,
                    "endLine": 22,
                    "endOffset": 2080,
                    "image": "[boolean]",
                    "startColumn": 145,
                    "startLine": 22,
                    "startOffset": 2072,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 23,
                    "endOffset": 2085,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 23,
                    "startOffset": 2084,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 28,
                    "endLine": 23,
                    "endOffset": 2109,
                    "image": "  Show help  ",
                    "startColumn": 16,
                    "startLine": 23,
                    "startOffset": 2097,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 23,
                    "endOffset": 2093,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 23,
                    "startOffset": 2088,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 23,
                    "endOffset": 2083,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 23,
                    "startOffset": 2082,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 37,
                    "endLine": 23,
                    "endOffset": 2118,
                    "image": "[boolean]",
                    "startColumn": 29,
                    "startLine": 23,
                    "startOffset": 2110,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 24,
                    "endOffset": 2123,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 24,
                    "startOffset": 2122,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 38,
                    "endLine": 24,
                    "endOffset": 2157,
                    "image": "  Show version number  ",
                    "startColumn": 16,
                    "startLine": 24,
                    "startOffset": 2135,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 24,
                    "endOffset": 2134,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 24,
                    "startOffset": 2126,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 24,
                    "endOffset": 2121,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 24,
                    "startOffset": 2120,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 47,
                    "endLine": 24,
                    "endOffset": 2166,
                    "image": "[boolean]",
                    "startColumn": 39,
                    "startLine": 24,
                    "startOffset": 2158,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 11,
              "endOffset": 543,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 11,
              "startOffset": 535,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "mdat readme init --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 26,
        "endLine": 1,
        "endOffset": 25,
        "image": "[options]",
        "startColumn": 18,
        "startLine": 1,
        "startOffset": 17,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 4,
        "endLine": 1,
        "endOffset": 3,
        "image": "mdat",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
      {
        "endColumn": 11,
        "endLine": 1,
        "endOffset": 10,
        "image": "readme",
        "startColumn": 6,
        "startLine": 1,
        "startOffset": 5,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
      {
        "endColumn": 16,
        "endLine": 1,
        "endOffset": 15,
        "image": "init",
        "startColumn": 13,
        "startLine": 1,
        "startOffset": 12,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "description": [
      {
        "endColumn": 84,
        "endLine": 3,
        "endOffset": 111,
        "image": "Interactively create a new readme.md file with sensible \`mdat\` comment placeholders.",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 28,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 6,
                    "endOffset": 126,
                    "image": "-i",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 125,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 159,
                    "endLine": 6,
                    "endOffset": 281,
                    "image": "[default: true]",
                    "startColumn": 145,
                    "startLine": 6,
                    "startOffset": 267,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 134,
                    "endLine": 6,
                    "endOffset": 256,
                    "image": "  Run the guided interactive \`init\` process. Set explicitly to \`false\` to use default values and skip the prompt.  ",
                    "startColumn": 20,
                    "startLine": 6,
                    "startOffset": 142,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 19,
                    "endLine": 6,
                    "endOffset": 141,
                    "image": "--interactive",
                    "startColumn": 7,
                    "startLine": 6,
                    "startOffset": 129,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 124,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 123,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 143,
                    "endLine": 6,
                    "endOffset": 265,
                    "image": "[boolean]",
                    "startColumn": 135,
                    "startLine": 6,
                    "startOffset": 257,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 148,
                    "endLine": 7,
                    "endOffset": 430,
                    "image": "[default: \`false\`, if an existing readme is found, don't touch it.]",
                    "startColumn": 82,
                    "startLine": 7,
                    "startOffset": 364,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 71,
                    "endLine": 7,
                    "endOffset": 353,
                    "image": "  Replace an existing readme file if one is found.  ",
                    "startColumn": 20,
                    "startLine": 7,
                    "startOffset": 302,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 17,
                    "endLine": 7,
                    "endOffset": 299,
                    "image": "--overwrite",
                    "startColumn": 7,
                    "startLine": 7,
                    "startOffset": 289,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 7,
                    "endOffset": 288,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 7,
                    "startOffset": 283,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 80,
                    "endLine": 7,
                    "endOffset": 362,
                    "image": "[boolean]",
                    "startColumn": 72,
                    "startLine": 7,
                    "startOffset": 354,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 8,
                    "endOffset": 435,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 8,
                    "startOffset": 434,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 94,
                    "endLine": 8,
                    "endOffset": 525,
                    "image": "[default: Same directory as input file.]",
                    "startColumn": 55,
                    "startLine": 8,
                    "startOffset": 486,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 45,
                    "endLine": 8,
                    "endOffset": 476,
                    "image": "  Output file directory.  ",
                    "startColumn": 20,
                    "startLine": 8,
                    "startOffset": 451,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 8,
                    "endOffset": 445,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 8,
                    "startOffset": 438,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 8,
                    "endOffset": 433,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 8,
                    "startOffset": 432,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 53,
                    "endLine": 8,
                    "endOffset": 484,
                    "image": "[string]",
                    "startColumn": 46,
                    "startLine": 8,
                    "startOffset": 477,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 9,
                    "endOffset": 530,
                    "image": "-e",
                    "startColumn": 3,
                    "startLine": 9,
                    "startOffset": 529,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 127,
                    "endLine": 9,
                    "endOffset": 653,
                    "image": "[default: true]",
                    "startColumn": 113,
                    "startLine": 9,
                    "startOffset": 639,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 102,
                    "endLine": 9,
                    "endOffset": 628,
                    "image": "  Automatically run \`mdat readme\` immediately after creating the readme template.  ",
                    "startColumn": 20,
                    "startLine": 9,
                    "startOffset": 546,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 9,
                    "endOffset": 540,
                    "image": "--expand",
                    "startColumn": 7,
                    "startLine": 9,
                    "startOffset": 533,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 9,
                    "endOffset": 528,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 9,
                    "startOffset": 527,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 111,
                    "endLine": 9,
                    "endOffset": 637,
                    "image": "[boolean]",
                    "startColumn": 103,
                    "startLine": 9,
                    "startOffset": 629,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 10,
                    "endOffset": 658,
                    "image": "-t",
                    "startColumn": 3,
                    "startLine": 10,
                    "startOffset": 657,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "choices": [
                  {
                    "endColumn": 150,
                    "endLine": 10,
                    "endOffset": 804,
                    "image": "[choices: "Mdat Readme", "Standard Readme Basic", "Standard Readme Full"]",
                    "startColumn": 78,
                    "startLine": 10,
                    "startOffset": 732,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[choices:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "choices",
                      "tokenTypeIdx": 12,
                    },
                    "tokenTypeIdx": 12,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 175,
                    "endLine": 10,
                    "endOffset": 829,
                    "image": "[default: "Mdat Readme"]",
                    "startColumn": 152,
                    "startLine": 10,
                    "startOffset": 806,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 68,
                    "endLine": 10,
                    "endOffset": 722,
                    "image": "  Specify a template to use for the new readme.  ",
                    "startColumn": 20,
                    "startLine": 10,
                    "startOffset": 674,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 16,
                    "endLine": 10,
                    "endOffset": 670,
                    "image": "--template",
                    "startColumn": 7,
                    "startLine": 10,
                    "startOffset": 661,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 10,
                    "endOffset": 656,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 10,
                    "startOffset": 655,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 76,
                    "endLine": 10,
                    "endOffset": 730,
                    "image": "[string]",
                    "startColumn": 69,
                    "startLine": 10,
                    "startOffset": 723,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 11,
                    "endOffset": 834,
                    "image": "-c",
                    "startColumn": 3,
                    "startLine": 11,
                    "startOffset": 833,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 375,
                    "endLine": 11,
                    "endOffset": 1205,
                    "image": "[default: true]",
                    "startColumn": 361,
                    "startLine": 11,
                    "startOffset": 1191,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 350,
                    "endLine": 11,
                    "endOffset": 1180,
                    "image": "  Use compound comment version of the template to replace several individual comment placeholders where possible. This combines things like \`<!-- title -->\`, \`<!-- badges -->\`, etc. in a single \`<!-- header -->\` comment. It's less clutter when you're editing, but it's also less explicit. The final readme.md output is identical.  ",
                    "startColumn": 20,
                    "startLine": 11,
                    "startOffset": 850,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 16,
                    "endLine": 11,
                    "endOffset": 846,
                    "image": "--compound",
                    "startColumn": 7,
                    "startLine": 11,
                    "startOffset": 837,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 11,
                    "endOffset": 832,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 11,
                    "startOffset": 831,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 359,
                    "endLine": 11,
                    "endOffset": 1189,
                    "image": "[boolean]",
                    "startColumn": 351,
                    "startLine": 11,
                    "startOffset": 1181,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 148,
                    "endLine": 12,
                    "endOffset": 1354,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to stderr for ease of redirection.  ",
                    "startColumn": 20,
                    "startLine": 12,
                    "startOffset": 1226,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 12,
                    "endOffset": 1221,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 1213,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 12,
                    "endOffset": 1212,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 1207,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 157,
                    "endLine": 12,
                    "endOffset": 1363,
                    "image": "[boolean]",
                    "startColumn": 149,
                    "startLine": 12,
                    "startOffset": 1355,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 13,
                    "endOffset": 1368,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 13,
                    "startOffset": 1367,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 32,
                    "endLine": 13,
                    "endOffset": 1396,
                    "image": "  Show help  ",
                    "startColumn": 20,
                    "startLine": 13,
                    "startOffset": 1384,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 13,
                    "endOffset": 1376,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 1371,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 13,
                    "endOffset": 1366,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 1365,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 41,
                    "endLine": 13,
                    "endOffset": 1405,
                    "image": "[boolean]",
                    "startColumn": 33,
                    "startLine": 13,
                    "startOffset": 1397,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 14,
                    "endOffset": 1410,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 14,
                    "startOffset": 1409,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 42,
                    "endLine": 14,
                    "endOffset": 1448,
                    "image": "  Show version number  ",
                    "startColumn": 20,
                    "startLine": 14,
                    "startOffset": 1426,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 14,
                    "endOffset": 1421,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 1413,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 14,
                    "endOffset": 1408,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 1407,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 51,
                    "endLine": 14,
                    "endOffset": 1457,
                    "image": "[boolean]",
                    "startColumn": 43,
                    "startLine": 14,
                    "startOffset": 1449,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 5,
              "endOffset": 122,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 114,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "mdat-readme --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 21,
        "endLine": 1,
        "endOffset": 20,
        "image": "[options]",
        "startColumn": 13,
        "startLine": 1,
        "startOffset": 12,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 11,
        "endLine": 1,
        "endOffset": 10,
        "image": "mdat-readme",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "commandsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 23,
                    "endLine": 6,
                    "endOffset": 86,
                    "image": "[command]",
                    "startColumn": 15,
                    "startLine": 6,
                    "startOffset": 78,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                  {
                    "endColumn": 33,
                    "endLine": 6,
                    "endOffset": 96,
                    "image": "[options]",
                    "startColumn": 25,
                    "startLine": 6,
                    "startOffset": 88,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "description": [
                  {
                    "endColumn": 140,
                    "endLine": 6,
                    "endOffset": 203,
                    "image": "  Expand mdat comment placeholders in your readme with a collection of helpful built-in expansion rules.",
                    "startColumn": 37,
                    "startLine": 6,
                    "startOffset": 100,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 13,
                    "endLine": 6,
                    "endOffset": 76,
                    "image": "mdat-readme",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 66,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 65,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 64,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 30,
                    "endLine": 7,
                    "endOffset": 234,
                    "image": "[options]",
                    "startColumn": 22,
                    "startLine": 7,
                    "startOffset": 226,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 20,
                    "endLine": 7,
                    "endOffset": 224,
                    "image": "expand",
                    "startColumn": 15,
                    "startLine": 7,
                    "startOffset": 219,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "defaultInfo": [
                  {
                    "endColumn": 78,
                    "endLine": 7,
                    "endOffset": 282,
                    "image": "[default]",
                    "startColumn": 70,
                    "startLine": 7,
                    "startOffset": 274,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfo",
                      "tokenTypeIdx": 9,
                    },
                    "tokenTypeIdx": 9,
                  },
                ],
                "description": [
                  {
                    "endColumn": 69,
                    "endLine": 7,
                    "endOffset": 273,
                    "image": "  Expand description goes here.  ",
                    "startColumn": 37,
                    "startLine": 7,
                    "startOffset": 241,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 13,
                    "endLine": 7,
                    "endOffset": 217,
                    "image": "mdat-readme",
                    "startColumn": 3,
                    "startLine": 7,
                    "startOffset": 207,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 7,
                    "endOffset": 206,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 7,
                    "startOffset": 205,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 28,
                    "endLine": 8,
                    "endOffset": 311,
                    "image": "[options]",
                    "startColumn": 20,
                    "startLine": 8,
                    "startOffset": 303,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 18,
                    "endLine": 8,
                    "endOffset": 301,
                    "image": "init",
                    "startColumn": 15,
                    "startLine": 8,
                    "startOffset": 298,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 122,
                    "endLine": 8,
                    "endOffset": 405,
                    "image": "  Interactively Create a new readme.md file with sensible \`mdat\` comment placeholders.",
                    "startColumn": 37,
                    "startLine": 8,
                    "startOffset": 320,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 13,
                    "endLine": 8,
                    "endOffset": 296,
                    "image": "mdat-readme",
                    "startColumn": 3,
                    "startLine": 8,
                    "startOffset": 286,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 8,
                    "endOffset": 285,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 8,
                    "startOffset": 284,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startCommandsSection": [
            {
              "endColumn": 10,
              "endLine": 5,
              "endOffset": 63,
              "image": "Commands:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 54,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Commands:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startCommandsSection",
                "tokenTypeIdx": 19,
              },
              "tokenTypeIdx": 19,
            },
          ],
        },
        "name": "commandsSection",
      },
    ],
    "description": [
      {
        "endColumn": 29,
        "endLine": 3,
        "endOffset": 51,
        "image": "Expand description goes here.",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 23,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 121,
                    "endLine": 11,
                    "endOffset": 537,
                    "image": "[default: The closest readme file is used by default.]",
                    "startColumn": 68,
                    "startLine": 11,
                    "startOffset": 484,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 58,
                    "endLine": 11,
                    "endOffset": 474,
                    "image": "  Path to the readme file to expand.  ",
                    "startColumn": 21,
                    "startLine": 11,
                    "startOffset": 437,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 19,
                    "endLine": 11,
                    "endOffset": 435,
                    "image": "--readme-file",
                    "startColumn": 7,
                    "startLine": 11,
                    "startOffset": 423,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 11,
                    "endOffset": 422,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 11,
                    "startOffset": 417,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 66,
                    "endLine": 11,
                    "endOffset": 482,
                    "image": "[string]",
                    "startColumn": 59,
                    "startLine": 11,
                    "startOffset": 475,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 153,
                    "endLine": 12,
                    "endOffset": 691,
                    "image": "[default: The closest package.json file is used by default.]",
                    "startColumn": 94,
                    "startLine": 12,
                    "startOffset": 632,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 84,
                    "endLine": 12,
                    "endOffset": 622,
                    "image": "  Path to the package.json file to use to populate the readme.  ",
                    "startColumn": 21,
                    "startLine": 12,
                    "startOffset": 559,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 20,
                    "endLine": 12,
                    "endOffset": 558,
                    "image": "--package-file",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 545,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 12,
                    "endOffset": 544,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 539,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 92,
                    "endLine": 12,
                    "endOffset": 630,
                    "image": "[string]",
                    "startColumn": 85,
                    "startLine": 12,
                    "startOffset": 623,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 161,
                    "endLine": 13,
                    "endOffset": 853,
                    "image": "[default: Configuration is loaded if found from the usual places, or defaults are used.]",
                    "startColumn": 74,
                    "startLine": 13,
                    "startOffset": 766,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 65,
                    "endLine": 13,
                    "endOffset": 757,
                    "image": "  Path(s) to files containing mdat configs.  ",
                    "startColumn": 21,
                    "startLine": 13,
                    "startOffset": 713,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 13,
                    "endOffset": 706,
                    "image": "--config",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 699,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 13,
                    "endOffset": 698,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 693,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 72,
                    "endLine": 13,
                    "endOffset": 764,
                    "image": "[array]",
                    "startColumn": 66,
                    "startLine": 13,
                    "startOffset": 758,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 14,
                    "endOffset": 858,
                    "image": "-r",
                    "startColumn": 3,
                    "startLine": 14,
                    "startOffset": 857,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 92,
                    "endLine": 14,
                    "endOffset": 946,
                    "image": "  Path(s) to files containing additional mdat comment expansion rules.  ",
                    "startColumn": 21,
                    "startLine": 14,
                    "startOffset": 875,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 14,
                    "endOffset": 867,
                    "image": "--rules",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 861,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 14,
                    "endOffset": 856,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 855,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 99,
                    "endLine": 14,
                    "endOffset": 953,
                    "image": "[array]",
                    "startColumn": 93,
                    "startLine": 14,
                    "startOffset": 947,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 15,
                    "endOffset": 958,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 15,
                    "startOffset": 957,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 154,
                    "endLine": 15,
                    "endOffset": 1108,
                    "image": "[default: Same directory as your readme file. Writes rule expansions directly to your readme file.]",
                    "startColumn": 56,
                    "startLine": 15,
                    "startOffset": 1010,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 46,
                    "endLine": 15,
                    "endOffset": 1000,
                    "image": "  Output file directory.  ",
                    "startColumn": 21,
                    "startLine": 15,
                    "startOffset": 975,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 15,
                    "endOffset": 968,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 15,
                    "startOffset": 961,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 15,
                    "endOffset": 956,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 15,
                    "startOffset": 955,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 54,
                    "endLine": 15,
                    "endOffset": 1008,
                    "image": "[string]",
                    "startColumn": 47,
                    "startLine": 15,
                    "startOffset": 1001,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 16,
                    "endOffset": 1113,
                    "image": "-n",
                    "startColumn": 3,
                    "startLine": 16,
                    "startOffset": 1112,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 127,
                    "endLine": 16,
                    "endOffset": 1236,
                    "image": "[default: Same directory as input file. Writes directly to your readme file.]",
                    "startColumn": 51,
                    "startLine": 16,
                    "startOffset": 1160,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 41,
                    "endLine": 16,
                    "endOffset": 1150,
                    "image": "  Output file name.  ",
                    "startColumn": 21,
                    "startLine": 16,
                    "startOffset": 1130,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 16,
                    "endOffset": 1121,
                    "image": "--name",
                    "startColumn": 7,
                    "startLine": 16,
                    "startOffset": 1116,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 16,
                    "endOffset": 1111,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 16,
                    "startOffset": 1110,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 49,
                    "endLine": 16,
                    "endOffset": 1158,
                    "image": "[string]",
                    "startColumn": 42,
                    "startLine": 16,
                    "startOffset": 1151,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 157,
                    "endLine": 17,
                    "endOffset": 1394,
                    "image": "[default: false]",
                    "startColumn": 142,
                    "startLine": 17,
                    "startOffset": 1379,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 131,
                    "endLine": 17,
                    "endOffset": 1368,
                    "image": "  Print the expanded markdown to stdout instead of saving to a file. Ignores \`--output\` and \`--name\` options.  ",
                    "startColumn": 21,
                    "startLine": 17,
                    "startOffset": 1258,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 17,
                    "endOffset": 1250,
                    "image": "--print",
                    "startColumn": 7,
                    "startLine": 17,
                    "startOffset": 1244,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 17,
                    "endOffset": 1243,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 17,
                    "startOffset": 1238,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 140,
                    "endLine": 17,
                    "endOffset": 1377,
                    "image": "[boolean]",
                    "startColumn": 132,
                    "startLine": 17,
                    "startOffset": 1369,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "description": [
                  {
                    "endColumn": 227,
                    "endLine": 18,
                    "endOffset": 1622,
                    "image": "  Require a string prefix before all comments to be considered for expansion. Useful if you have a bunch of non-mdat comments in your markdown file, or if you're willing to trade some verbosity for safety.  ",
                    "startColumn": 21,
                    "startLine": 18,
                    "startOffset": 1416,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 18,
                    "endOffset": 1409,
                    "image": "--prefix",
                    "startColumn": 7,
                    "startLine": 18,
                    "startOffset": 1402,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 18,
                    "endOffset": 1401,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 18,
                    "startOffset": 1396,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 235,
                    "endLine": 18,
                    "endOffset": 1630,
                    "image": "[string]",
                    "startColumn": 228,
                    "startLine": 18,
                    "startOffset": 1623,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 19,
                    "endOffset": 1635,
                    "image": "-m",
                    "startColumn": 3,
                    "startLine": 19,
                    "startOffset": 1634,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 229,
                    "endLine": 19,
                    "endOffset": 1860,
                    "image": "[default: true]",
                    "startColumn": 215,
                    "startLine": 19,
                    "startOffset": 1846,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 204,
                    "endLine": 19,
                    "endOffset": 1835,
                    "image": "  Embed an extra comment at the top of the generated markdown noting the date of generation and warning editors that certain sections of the document have been generated dynamically.  ",
                    "startColumn": 21,
                    "startLine": 19,
                    "startOffset": 1652,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 19,
                    "endOffset": 1643,
                    "image": "--meta",
                    "startColumn": 7,
                    "startLine": 19,
                    "startOffset": 1638,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 19,
                    "endOffset": 1633,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 19,
                    "startOffset": 1632,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 213,
                    "endLine": 19,
                    "endOffset": 1844,
                    "image": "[boolean]",
                    "startColumn": 205,
                    "startLine": 19,
                    "startOffset": 1836,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 20,
                    "endOffset": 1865,
                    "image": "-c",
                    "startColumn": 3,
                    "startLine": 20,
                    "startOffset": 1864,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 203,
                    "endLine": 20,
                    "endOffset": 2064,
                    "image": "[default: false]",
                    "startColumn": 188,
                    "startLine": 20,
                    "startOffset": 2049,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 177,
                    "endLine": 20,
                    "endOffset": 2038,
                    "image": "  Check your readme for rule violations without expanding comments. Identifies things like missing comment placeholders and incorrect placeholder ordering.  ",
                    "startColumn": 21,
                    "startLine": 20,
                    "startOffset": 1882,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 20,
                    "endOffset": 1874,
                    "image": "--check",
                    "startColumn": 7,
                    "startLine": 20,
                    "startOffset": 1868,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 20,
                    "endOffset": 1863,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 20,
                    "startOffset": 1862,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 186,
                    "endLine": 20,
                    "endOffset": 2047,
                    "image": "[boolean]",
                    "startColumn": 178,
                    "startLine": 20,
                    "startOffset": 2039,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 177,
                    "endLine": 21,
                    "endOffset": 2242,
                    "image": "[default: false]",
                    "startColumn": 162,
                    "startLine": 21,
                    "startOffset": 2227,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 151,
                    "endLine": 21,
                    "endOffset": 2216,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
                    "startColumn": 21,
                    "startLine": 21,
                    "startOffset": 2086,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 21,
                    "endOffset": 2080,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 21,
                    "startOffset": 2072,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 21,
                    "endOffset": 2071,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 21,
                    "startOffset": 2066,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 160,
                    "endLine": 21,
                    "endOffset": 2225,
                    "image": "[boolean]",
                    "startColumn": 152,
                    "startLine": 21,
                    "startOffset": 2217,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 22,
                    "endOffset": 2247,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 22,
                    "startOffset": 2246,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 33,
                    "endLine": 22,
                    "endOffset": 2276,
                    "image": "  Show help  ",
                    "startColumn": 21,
                    "startLine": 22,
                    "startOffset": 2264,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 22,
                    "endOffset": 2255,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 22,
                    "startOffset": 2250,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 22,
                    "endOffset": 2245,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 22,
                    "startOffset": 2244,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 42,
                    "endLine": 22,
                    "endOffset": 2285,
                    "image": "[boolean]",
                    "startColumn": 34,
                    "startLine": 22,
                    "startOffset": 2277,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 23,
                    "endOffset": 2290,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 23,
                    "startOffset": 2289,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 43,
                    "endLine": 23,
                    "endOffset": 2329,
                    "image": "  Show version number  ",
                    "startColumn": 21,
                    "startLine": 23,
                    "startOffset": 2307,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 23,
                    "endOffset": 2301,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 23,
                    "startOffset": 2293,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 23,
                    "endOffset": 2288,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 23,
                    "startOffset": 2287,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 52,
                    "endLine": 23,
                    "endOffset": 2338,
                    "image": "[boolean]",
                    "startColumn": 44,
                    "startLine": 23,
                    "startOffset": 2330,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 10,
              "endOffset": 416,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 10,
              "startOffset": 408,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "tldraw-cli --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 20,
        "endLine": 1,
        "endOffset": 19,
        "image": "<command>",
        "startColumn": 12,
        "startLine": 1,
        "startOffset": 11,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 10,
        "endLine": 1,
        "endOffset": 9,
        "image": "tldraw-cli",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "commandsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 22,
                    "endLine": 6,
                    "endOffset": 76,
                    "image": "<command>",
                    "startColumn": 14,
                    "startLine": 6,
                    "startOffset": 68,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "defaultInfo": [
                  {
                    "endColumn": 69,
                    "endLine": 6,
                    "endOffset": 123,
                    "image": "[default]",
                    "startColumn": 61,
                    "startLine": 6,
                    "startOffset": 115,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfo",
                      "tokenTypeIdx": 9,
                    },
                    "tokenTypeIdx": 9,
                  },
                ],
                "description": [
                  {
                    "endColumn": 60,
                    "endLine": 6,
                    "endOffset": 114,
                    "image": "  CLI tools for tldraw.  ",
                    "startColumn": 36,
                    "startLine": 6,
                    "startOffset": 90,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 12,
                    "endLine": 6,
                    "endOffset": 66,
                    "image": "tldraw-cli",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 57,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 56,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 55,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 34,
                    "endLine": 7,
                    "endOffset": 158,
                    "image": "<files|urls..>",
                    "startColumn": 21,
                    "startLine": 7,
                    "startOffset": 145,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 19,
                    "endLine": 7,
                    "endOffset": 143,
                    "image": "export",
                    "startColumn": 14,
                    "startLine": 7,
                    "startOffset": 138,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 191,
                    "endLine": 7,
                    "endOffset": 315,
                    "image": "  Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
                    "startColumn": 36,
                    "startLine": 7,
                    "startOffset": 160,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 12,
                    "endLine": 7,
                    "endOffset": 136,
                    "image": "tldraw-cli",
                    "startColumn": 3,
                    "startLine": 7,
                    "startOffset": 127,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 7,
                    "endOffset": 126,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 7,
                    "startOffset": 125,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 35,
                    "endLine": 8,
                    "endOffset": 351,
                    "image": "[files-or-urls..]",
                    "startColumn": 19,
                    "startLine": 8,
                    "startOffset": 335,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "commandName": [
                  {
                    "endColumn": 17,
                    "endLine": 8,
                    "endOffset": 333,
                    "image": "open",
                    "startColumn": 14,
                    "startLine": 8,
                    "startOffset": 330,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "description": [
                  {
                    "endColumn": 371,
                    "endLine": 8,
                    "endOffset": 687,
                    "image": "  Open a tldraw \`.tldr\` file or tldraw.com URL your default browser. Uses a locally-hosted instance of tldraw. Call \`open\` without an argument to open a blank sketch. Sketches opened via URL are temporarily copied to the local system, and will not be kept in sync with tldraw.com. This process does not exit until the browser is closed.",
                    "startColumn": 36,
                    "startLine": 8,
                    "startOffset": 352,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescriptionTerminal",
                      "tokenTypeIdx": 22,
                    },
                    "tokenTypeIdx": 22,
                  },
                ],
                "parentCommandName": [
                  {
                    "endColumn": 12,
                    "endLine": 8,
                    "endOffset": 328,
                    "image": "tldraw-cli",
                    "startColumn": 3,
                    "startLine": 8,
                    "startOffset": 319,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\S\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "word",
                      "tokenTypeIdx": 6,
                    },
                    "tokenTypeIdx": 6,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 8,
                    "endOffset": 318,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 8,
                    "startOffset": 317,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startCommandsSection": [
            {
              "endColumn": 10,
              "endLine": 5,
              "endOffset": 54,
              "image": "Commands:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 45,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Commands:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startCommandsSection",
                "tokenTypeIdx": 19,
              },
              "tokenTypeIdx": 19,
            },
          ],
        },
        "name": "commandsSection",
      },
    ],
    "description": [
      {
        "endColumn": 21,
        "endLine": 3,
        "endOffset": 42,
        "image": "CLI tools for tldraw.",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 22,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 11,
                    "endOffset": 702,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 11,
                    "startOffset": 701,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 28,
                    "endLine": 11,
                    "endOffset": 726,
                    "image": "  Show help  ",
                    "startColumn": 16,
                    "startLine": 11,
                    "startOffset": 714,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 11,
                    "endOffset": 710,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 11,
                    "startOffset": 705,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 11,
                    "endOffset": 700,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 11,
                    "startOffset": 699,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 37,
                    "endLine": 11,
                    "endOffset": 735,
                    "image": "[boolean]",
                    "startColumn": 29,
                    "startLine": 11,
                    "startOffset": 727,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 12,
                    "endOffset": 740,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 12,
                    "startOffset": 739,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 38,
                    "endLine": 12,
                    "endOffset": 774,
                    "image": "  Show version number  ",
                    "startColumn": 16,
                    "startLine": 12,
                    "startOffset": 752,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 12,
                    "endOffset": 751,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 743,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 12,
                    "endOffset": 738,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 737,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 47,
                    "endLine": 12,
                    "endOffset": 783,
                    "image": "[boolean]",
                    "startColumn": 39,
                    "startLine": 12,
                    "startOffset": 775,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 10,
              "endOffset": 698,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 10,
              "startOffset": 690,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;

exports[`cli help parsing > should parse "tldraw-cli export --help" to a valid cst 1`] = `
{
  "children": {
    "argument": [
      {
        "endColumn": 32,
        "endLine": 1,
        "endOffset": 31,
        "image": "<files|urls..>",
        "startColumn": 19,
        "startLine": 1,
        "startOffset": 18,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "argument",
          "tokenTypeIdx": 7,
        },
        "tokenTypeIdx": 7,
      },
    ],
    "commandName": [
      {
        "endColumn": 10,
        "endLine": 1,
        "endOffset": 9,
        "image": "tldraw-cli",
        "startColumn": 1,
        "startLine": 1,
        "startOffset": 0,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
      {
        "endColumn": 17,
        "endLine": 1,
        "endOffset": 16,
        "image": "export",
        "startColumn": 12,
        "startLine": 1,
        "startOffset": 11,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\\\S\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "word",
          "tokenTypeIdx": 6,
        },
        "tokenTypeIdx": 6,
      },
    ],
    "description": [
      {
        "endColumn": 154,
        "endLine": 3,
        "endOffset": 187,
        "image": "Export a local tldraw ".tldr" file or a tldraw.com URL to an svg, png, json, or tldr file. Prints the absolute path(s) to the exported image(s) to stdout.",
        "startColumn": 1,
        "startLine": 3,
        "startOffset": 34,
        "tokenType": {
          "CATEGORIES": [],
          "PATTERN": /\\.\\+/,
          "categoryMatches": [],
          "categoryMatchesMap": {},
          "isParent": false,
          "name": "programDescription",
          "tokenTypeIdx": 15,
        },
        "tokenTypeIdx": 15,
      },
    ],
    "optionsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 9,
                    "endOffset": 501,
                    "image": "-f",
                    "startColumn": 3,
                    "startLine": 9,
                    "startOffset": 500,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "choices": [
                  {
                    "endColumn": 91,
                    "endLine": 9,
                    "endOffset": 588,
                    "image": "[choices: "png", "svg", "json", "tldr"]",
                    "startColumn": 53,
                    "startLine": 9,
                    "startOffset": 550,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[choices:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "choices",
                      "tokenTypeIdx": 12,
                    },
                    "tokenTypeIdx": 12,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 108,
                    "endLine": 9,
                    "endOffset": 605,
                    "image": "[default: "svg"]",
                    "startColumn": 93,
                    "startLine": 9,
                    "startOffset": 590,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 43,
                    "endLine": 9,
                    "endOffset": 540,
                    "image": "  Output image format.  ",
                    "startColumn": 20,
                    "startLine": 9,
                    "startOffset": 517,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 9,
                    "endOffset": 511,
                    "image": "--format",
                    "startColumn": 7,
                    "startLine": 9,
                    "startOffset": 504,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 9,
                    "endOffset": 499,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 9,
                    "startOffset": 498,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 51,
                    "endLine": 9,
                    "endOffset": 548,
                    "image": "[string]",
                    "startColumn": 44,
                    "startLine": 9,
                    "startOffset": 541,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 10,
                    "endOffset": 610,
                    "image": "-o",
                    "startColumn": 3,
                    "startLine": 10,
                    "startOffset": 609,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 70,
                    "endLine": 10,
                    "endOffset": 676,
                    "image": "[default: "./"]",
                    "startColumn": 56,
                    "startLine": 10,
                    "startOffset": 662,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 46,
                    "endLine": 10,
                    "endOffset": 652,
                    "image": "  Output image directory.  ",
                    "startColumn": 20,
                    "startLine": 10,
                    "startOffset": 626,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 10,
                    "endOffset": 620,
                    "image": "--output",
                    "startColumn": 7,
                    "startLine": 10,
                    "startOffset": 613,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 10,
                    "endOffset": 608,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 10,
                    "startOffset": 607,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 54,
                    "endLine": 10,
                    "endOffset": 660,
                    "image": "[string]",
                    "startColumn": 47,
                    "startLine": 10,
                    "startOffset": 653,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 11,
                    "endOffset": 681,
                    "image": "-n",
                    "startColumn": 3,
                    "startLine": 11,
                    "startOffset": 680,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 122,
                    "endLine": 11,
                    "endOffset": 799,
                    "image": "[default: The original file name or URL id is used.]",
                    "startColumn": 71,
                    "startLine": 11,
                    "startOffset": 748,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 61,
                    "endLine": 11,
                    "endOffset": 738,
                    "image": "  Output image name (without extension).  ",
                    "startColumn": 20,
                    "startLine": 11,
                    "startOffset": 697,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 11,
                    "endOffset": 689,
                    "image": "--name",
                    "startColumn": 7,
                    "startLine": 11,
                    "startOffset": 684,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 11,
                    "endOffset": 679,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 11,
                    "startOffset": 678,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 69,
                    "endLine": 11,
                    "endOffset": 746,
                    "image": "[string]",
                    "startColumn": 62,
                    "startLine": 11,
                    "startOffset": 739,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 201,
                    "endLine": 12,
                    "endOffset": 1001,
                    "image": "[default: false]",
                    "startColumn": 186,
                    "startLine": 12,
                    "startOffset": 986,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 177,
                    "endLine": 12,
                    "endOffset": 977,
                    "image": "  Export each sketch "frame" as a separate image. Pass one or more frame names or IDs to export specific frames, or skip the arguments to export all frames.  ",
                    "startColumn": 20,
                    "startLine": 12,
                    "startOffset": 820,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 14,
                    "endLine": 12,
                    "endOffset": 814,
                    "image": "--frames",
                    "startColumn": 7,
                    "startLine": 12,
                    "startOffset": 807,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 12,
                    "endOffset": 806,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 12,
                    "startOffset": 801,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 184,
                    "endLine": 12,
                    "endOffset": 984,
                    "image": "[array]",
                    "startColumn": 178,
                    "startLine": 12,
                    "startOffset": 978,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 13,
                    "endOffset": 1006,
                    "image": "-t",
                    "startColumn": 3,
                    "startLine": 13,
                    "startOffset": 1005,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 95,
                    "endLine": 13,
                    "endOffset": 1097,
                    "image": "[default: false]",
                    "startColumn": 80,
                    "startLine": 13,
                    "startOffset": 1082,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 69,
                    "endLine": 13,
                    "endOffset": 1071,
                    "image": "  Export an image with a transparent background.  ",
                    "startColumn": 20,
                    "startLine": 13,
                    "startOffset": 1022,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 19,
                    "endLine": 13,
                    "endOffset": 1021,
                    "image": "--transparent",
                    "startColumn": 7,
                    "startLine": 13,
                    "startOffset": 1009,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 13,
                    "endOffset": 1004,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 13,
                    "startOffset": 1003,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 78,
                    "endLine": 13,
                    "endOffset": 1080,
                    "image": "[boolean]",
                    "startColumn": 70,
                    "startLine": 13,
                    "startOffset": 1072,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 14,
                    "endOffset": 1102,
                    "image": "-d",
                    "startColumn": 3,
                    "startLine": 14,
                    "startOffset": 1101,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 90,
                    "endLine": 14,
                    "endOffset": 1188,
                    "image": "[default: false]",
                    "startColumn": 75,
                    "startLine": 14,
                    "startOffset": 1173,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 64,
                    "endLine": 14,
                    "endOffset": 1162,
                    "image": "  Export a dark theme version of the image.  ",
                    "startColumn": 20,
                    "startLine": 14,
                    "startOffset": 1118,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 17,
                    "endLine": 14,
                    "endOffset": 1115,
                    "image": "--dark-mode",
                    "startColumn": 7,
                    "startLine": 14,
                    "startOffset": 1105,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 14,
                    "endOffset": 1100,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 14,
                    "startOffset": 1099,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 73,
                    "endLine": 14,
                    "endOffset": 1171,
                    "image": "[boolean]",
                    "startColumn": 65,
                    "startLine": 14,
                    "startOffset": 1163,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 211,
                    "endLine": 15,
                    "endOffset": 1400,
                    "image": "[default: false]",
                    "startColumn": 196,
                    "startLine": 15,
                    "startOffset": 1385,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 185,
                    "endLine": 15,
                    "endOffset": 1374,
                    "image": "  Remove \`<style>\` elements from SVG output, useful to lighten the load of embedded fonts if you intend to provide your own stylesheets. Applies to SVG output only.  ",
                    "startColumn": 20,
                    "startLine": 15,
                    "startOffset": 1209,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 19,
                    "endLine": 15,
                    "endOffset": 1208,
                    "image": "--strip-style",
                    "startColumn": 7,
                    "startLine": 15,
                    "startOffset": 1196,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 15,
                    "endOffset": 1195,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 15,
                    "startOffset": 1190,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 194,
                    "endLine": 15,
                    "endOffset": 1383,
                    "image": "[boolean]",
                    "startColumn": 186,
                    "startLine": 15,
                    "startOffset": 1375,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 16,
                    "endOffset": 1405,
                    "image": "-p",
                    "startColumn": 3,
                    "startLine": 16,
                    "startOffset": 1404,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "defaultInfoDescription": [
                  {
                    "endColumn": 214,
                    "endLine": 16,
                    "endOffset": 1615,
                    "image": "[default: false]",
                    "startColumn": 199,
                    "startLine": 16,
                    "startOffset": 1600,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 188,
                    "endLine": 16,
                    "endOffset": 1589,
                    "image": "  Print the exported image(s) to stdout instead of saving to a file. Incompatible with \`--output\`, and disregards \`--name\`. PNGs are printed as base64-encoded strings.  ",
                    "startColumn": 20,
                    "startLine": 16,
                    "startOffset": 1421,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 13,
                    "endLine": 16,
                    "endOffset": 1414,
                    "image": "--print",
                    "startColumn": 7,
                    "startLine": 16,
                    "startOffset": 1408,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 16,
                    "endOffset": 1403,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 16,
                    "startOffset": 1402,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 197,
                    "endLine": 16,
                    "endOffset": 1598,
                    "image": "[boolean]",
                    "startColumn": 189,
                    "startLine": 16,
                    "startOffset": 1590,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "defaultInfoDescription": [
                  {
                    "endColumn": 176,
                    "endLine": 17,
                    "endOffset": 1792,
                    "image": "[default: false]",
                    "startColumn": 161,
                    "startLine": 17,
                    "startOffset": 1777,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[default:\\\\s\\.\\+\\?\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "defaultInfoDescription",
                      "tokenTypeIdx": 11,
                    },
                    "tokenTypeIdx": 11,
                  },
                ],
                "description": [
                  {
                    "endColumn": 150,
                    "endLine": 17,
                    "endOffset": 1766,
                    "image": "  Enable verbose logging. All verbose logs and prefixed with their log level and are printed to \`stderr\` for ease of redirection.  ",
                    "startColumn": 20,
                    "startLine": 17,
                    "startOffset": 1636,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 17,
                    "endOffset": 1631,
                    "image": "--verbose",
                    "startColumn": 7,
                    "startLine": 17,
                    "startOffset": 1623,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 6,
                    "endLine": 17,
                    "endOffset": 1622,
                    "image": "      ",
                    "startColumn": 1,
                    "startLine": 17,
                    "startOffset": 1617,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 159,
                    "endLine": 17,
                    "endOffset": 1775,
                    "image": "[boolean]",
                    "startColumn": 151,
                    "startLine": 17,
                    "startOffset": 1767,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 18,
                    "endOffset": 1797,
                    "image": "-h",
                    "startColumn": 3,
                    "startLine": 18,
                    "startOffset": 1796,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 32,
                    "endLine": 18,
                    "endOffset": 1825,
                    "image": "  Show help  ",
                    "startColumn": 20,
                    "startLine": 18,
                    "startOffset": 1813,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 12,
                    "endLine": 18,
                    "endOffset": 1805,
                    "image": "--help",
                    "startColumn": 7,
                    "startLine": 18,
                    "startOffset": 1800,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 18,
                    "endOffset": 1795,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 18,
                    "startOffset": 1794,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 41,
                    "endLine": 18,
                    "endOffset": 1834,
                    "image": "[boolean]",
                    "startColumn": 33,
                    "startLine": 18,
                    "startOffset": 1826,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
            {
              "children": {
                "alias": [
                  {
                    "endColumn": 4,
                    "endLine": 19,
                    "endOffset": 1839,
                    "image": "-v",
                    "startColumn": 3,
                    "startLine": 19,
                    "startOffset": 1838,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /-\\[A-Za-z\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "alias",
                      "tokenTypeIdx": 4,
                    },
                    "tokenTypeIdx": 4,
                  },
                ],
                "description": [
                  {
                    "endColumn": 42,
                    "endLine": 19,
                    "endOffset": 1877,
                    "image": "  Show version number  ",
                    "startColumn": 20,
                    "startLine": 19,
                    "startOffset": 1855,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "flag": [
                  {
                    "endColumn": 15,
                    "endLine": 19,
                    "endOffset": 1850,
                    "image": "--version",
                    "startColumn": 7,
                    "startLine": 19,
                    "startOffset": 1842,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /--\\[\\\\w-_\\]\\+/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "flag",
                      "tokenTypeIdx": 3,
                    },
                    "tokenTypeIdx": 3,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 19,
                    "endOffset": 1837,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 19,
                    "startOffset": 1836,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 51,
                    "endLine": 19,
                    "endOffset": 1886,
                    "image": "[boolean]",
                    "startColumn": 43,
                    "startLine": 19,
                    "startOffset": 1878,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startOptionsSection": [
            {
              "endColumn": 9,
              "endLine": 8,
              "endOffset": 497,
              "image": "Options:
",
              "startColumn": 1,
              "startLine": 8,
              "startOffset": 489,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Options:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startOptionsSection",
                "tokenTypeIdx": 17,
              },
              "tokenTypeIdx": 17,
            },
          ],
        },
        "name": "optionsSection",
      },
    ],
    "positionalsSection": [
      {
        "children": {
          "sectionRow": [
            {
              "children": {
                "argument": [
                  {
                    "endColumn": 16,
                    "endLine": 6,
                    "endOffset": 218,
                    "image": "<files|urls..>",
                    "startColumn": 3,
                    "startLine": 6,
                    "startOffset": 205,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /<\\\\S\\+>\\|\\\\\\[\\\\S\\+\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "argument",
                      "tokenTypeIdx": 7,
                    },
                    "tokenTypeIdx": 7,
                  },
                ],
                "description": [
                  {
                    "endColumn": 276,
                    "endLine": 6,
                    "endOffset": 478,
                    "image": "  The tldraw sketch to export. May be one or more paths to local \`.tldr\` files, or tldraw.com sketch URLs. Accepts a mix of both file paths and URLs, and supports glob matching via your shell. Prints the absolute path(s) to the exported image(s) to \`stdout\`.  ",
                    "startColumn": 17,
                    "startLine": 6,
                    "startOffset": 219,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2\\}\\\\w\\.\\+ \\{2\\}/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "rowDescription",
                      "tokenTypeIdx": 21,
                    },
                    "tokenTypeIdx": 21,
                  },
                ],
                "startRow": [
                  {
                    "endColumn": 2,
                    "endLine": 6,
                    "endOffset": 204,
                    "image": "  ",
                    "startColumn": 1,
                    "startLine": 6,
                    "startOffset": 203,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": / \\{2,\\}/,
                      "PUSH_MODE": "ROW_MODE",
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "startRow",
                      "tokenTypeIdx": 20,
                    },
                    "tokenTypeIdx": 20,
                  },
                ],
                "type": [
                  {
                    "endColumn": 284,
                    "endLine": 6,
                    "endOffset": 486,
                    "image": "[string]",
                    "startColumn": 277,
                    "startLine": 6,
                    "startOffset": 479,
                    "tokenType": {
                      "CATEGORIES": [],
                      "PATTERN": /\\\\\\[\\(boolean\\|string\\|array\\)\\]/,
                      "categoryMatches": [],
                      "categoryMatchesMap": {},
                      "isParent": false,
                      "name": "type",
                      "tokenTypeIdx": 8,
                    },
                    "tokenTypeIdx": 8,
                  },
                ],
              },
              "name": "sectionRow",
            },
          ],
          "startPositionalsSection": [
            {
              "endColumn": 13,
              "endLine": 5,
              "endOffset": 202,
              "image": "Positionals:
",
              "startColumn": 1,
              "startLine": 5,
              "startOffset": 190,
              "tokenType": {
                "CATEGORIES": [],
                "PATTERN": /Positionals:\\\\n/,
                "PUSH_MODE": "SECTION_MODE",
                "categoryMatches": [],
                "categoryMatchesMap": {},
                "isParent": false,
                "name": "startPositionalsSection",
                "tokenTypeIdx": 18,
              },
              "tokenTypeIdx": 18,
            },
          ],
        },
        "name": "positionalsSection",
      },
    ],
  },
  "name": "programHelp",
}
`;
